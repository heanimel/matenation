{"file_contents":{"client/src/components/contact-section.tsx":{"content":"import { useState } from \"react\";\nimport { ScrollReveal } from \"./scroll-reveal\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertContactSchema, type InsertContact } from \"@shared/schema\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/components/ui/form\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { AnimatedBackground } from \"./animated-background\";\nimport { MinimalistBackground } from \"./minimalist-background\";\n\nexport function ContactSection() {\n  const { toast } = useToast();\n  \n  const form = useForm<InsertContact>({\n    resolver: zodResolver(insertContactSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      interest: \"\",\n      message: \"\"\n    }\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: async (data: InsertContact) => {\n      const response = await apiRequest(\"POST\", \"/api/contact\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message sent!\",\n        description: \"Thank you for your message! We'll get back to you soon.\"\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Failed to send message\",\n        description: \"Please try again later.\",\n        variant: \"destructive\"\n      });\n      console.error(\"Contact form error:\", error);\n    }\n  });\n\n  const onSubmit = (data: InsertContact) => {\n    contactMutation.mutate(data);\n  };\n\n  return (\n    <MinimalistBackground className=\"py-20 md:py-32 px-4 md:px-6\">\n      <div className=\"max-w-4xl mx-auto text-center\">\n        <ScrollReveal>\n          <h2 className=\"text-4xl md:text-5xl font-light mb-16\">Get In Touch</h2>\n          <Card className=\"rounded-2xl p-6 md:p-12 bg-black/30 backdrop-blur-md border-white/10\">\n            <CardContent className=\"p-0\">\n              <p className=\"text-xl text-muted-foreground mb-8\">Ready to discover unique music or collaborate with us? Let's connect.</p>\n              \n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormControl>\n                            <Input \n                              placeholder=\"Your Name\" \n                              className=\"bg-background border-border\"\n                              data-testid=\"input-name\"\n                              {...field} \n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormControl>\n                            <Input \n                              type=\"email\"\n                              placeholder=\"Your Email\" \n                              className=\"bg-background border-border\"\n                              data-testid=\"input-email\"\n                              {...field} \n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"interest\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormControl>\n                          <Select onValueChange={field.onChange} value={field.value}>\n                            <SelectTrigger className=\"bg-background border-border\" data-testid=\"select-interest\">\n                              <SelectValue placeholder=\"I'm interested in...\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"music-discovery\">Music Discovery</SelectItem>\n                              <SelectItem value=\"artist-development\">Artist Development</SelectItem>\n                              <SelectItem value=\"partnership\">Partnership Opportunities</SelectItem>\n                              <SelectItem value=\"general\">General Inquiry</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Your Message\" \n                            rows={6}\n                            className=\"bg-background border-border resize-none\"\n                            data-testid=\"textarea-message\"\n                            {...field} \n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <Button \n                    type=\"submit\" \n                    className=\"bg-white text-black hover:bg-gray-200\"\n                    disabled={contactMutation.isPending}\n                    data-testid=\"button-submit\"\n                  >\n                    {contactMutation.isPending ? \"Sending...\" : \"Send Message\"}\n                  </Button>\n                </form>\n              </Form>\n              \n              <div className=\"mt-8 pt-8 border-t border-border\">\n                <p className=\"text-muted-foreground\">Or reach us directly at:</p>\n                <a \n                  href=\"mailto:matenations@gmail.com\" \n                  className=\"text-primary hover:underline font-medium\"\n                  data-testid=\"link-email\"\n                >\n                  matenations@gmail.com\n                </a>\n              </div>\n            </CardContent>\n          </Card>\n        </ScrollReveal>\n      </div>\n  </MinimalistBackground>\n  );\n}\n","size_bytes":7037},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  interest: text(\"interest\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactSchema = createInsertSchema(contactSubmissions).pick({\n  name: true,\n  email: true,\n  interest: true,\n  message: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n","size_bytes":1215},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"..\", \"client\", \"dist\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2277},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/contexts/theme-context\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":810},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/retro-team.tsx":{"content":"import { motion } from 'framer-motion';\nimport { User } from 'lucide-react';\nimport avikImage from \"@assets/AVIK_1757912854902.jpeg\";\nimport amritImage from \"@assets/Amrit_1757912855008.jpeg\";\nimport ceoImage from \"@assets/ceo_1757912854870.jpeg\";\nimport abhayImage from \"@assets/Abhay_1757912854967.jpeg\";\n\ninterface TeamMember {\n  name: string;\n  role: string;\n  description: string;\n  image?: string;\n}\n\nconst allTeam: TeamMember[] = [\n  {\n    name: \"AVIK\",\n    role: \"Founder & EDM Producer\",\n    description: \"Visionary founder driving Mate Nations' mission\",\n    image: avikImage\n  },\n  {\n    name: \"Alex Mendez\",\n    role: \"CEO\",\n    description: \"Strategic leader orchestrating growth\",\n    image: ceoImage\n  },\n  {\n    name: \"Amrit\",\n    role: \"Investor & Sponsorship\",\n    description: \"Financial strategist and partnership architect\",\n    image: amritImage\n  },\n  { name: \"Alvin\", role: \"Director\", description: \"Operations oversight\" },\n  { name: \"Abhay\", role: \"A&R Specialist\", description: \"Pop & electronic music\", image: abhayImage },\n  { name: \"Stefflen\", role: \"Head of Digital Art\", description: \"Visual identity leader\" },\n  { name: \"Soumyadeep\", role: \"Head of Video\", description: \"Video production maestro\" },\n  { name: \"Peter\", role: \"Release Coordinator\", description: \"Distribution management\" },\n  { name: \"Prajit\", role: \"Strategist\", description: \"Market strategy expert\" },\n  { name: \"Utsav\", role: \"Manager\", description: \"Operations coordinator\" },\n];\n\nexport function RetroTeam() {\n  const gradients = [\n    'from-purple-500 via-pink-500 to-red-500',\n    'from-blue-500 via-purple-500 to-pink-500', \n    'from-cyan-500 via-blue-500 to-purple-500',\n    'from-pink-500 via-red-500 to-orange-500',\n    'from-green-500 via-teal-500 to-cyan-500',\n    'from-yellow-500 via-orange-500 to-red-500',\n    'from-indigo-500 via-purple-500 to-pink-500',\n    'from-teal-500 via-green-500 to-emerald-500',\n    'from-rose-500 via-pink-500 to-fuchsia-500',\n    'from-violet-500 via-purple-500 to-indigo-500'\n  ];\n\n  const getRotation = (index: number) => {\n    const rotations = [-8, 4, -3, 6, -5, 3, -7, 5, -4, 8];\n    return rotations[index % rotations.length];\n  };\n\n  return (\n    <section className=\"py-20 px-6 relative overflow-visible\">\n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n        className=\"max-w-7xl mx-auto\"\n      >\n        <div className=\"text-center mb-16\">\n          <div className=\"retro-text text-5xl md:text-6xl text-primary mb-4\">\n            THE CREW\n          </div>\n          <p className=\"text-lg text-muted-foreground\">\n            Meet the sound makers\n          </p>\n        </div>\n\n        <div className=\"relative min-h-[600px] md:min-h-[700px] mb-20 flex items-center justify-center\">\n          {allTeam.map((member, index) => {\n            const rotation = getRotation(index);\n            const gradient = gradients[index % gradients.length];\n            \n            return (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, scale: 0.8, y: 50 }}\n                whileInView={{ opacity: 1, scale: 1, y: 0 }}\n                viewport={{ once: true, margin: \"-50px\" }}\n                transition={{ \n                  delay: index * 0.15, \n                  duration: 0.8,\n                  ease: [0.22, 1, 0.36, 1]\n                }}\n                whileHover={{ \n                  scale: 1.05,\n                  rotate: 0,\n                  y: -20,\n                  zIndex: 50,\n                  transition: { \n                    duration: 0.4,\n                    ease: [0.22, 1, 0.36, 1]\n                  }\n                }}\n                className=\"absolute\"\n                style={{\n                  transform: `rotate(${rotation}deg) translateY(${index * 2}px)`,\n                  zIndex: allTeam.length - index\n                }}\n              >\n                <div className={`w-[280px] md:w-[320px] h-[400px] md:h-[450px] rounded-2xl p-6 text-center shadow-[0_10px_40px_rgba(0,0,0,0.2)] transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.3)] bg-gradient-to-br ${gradient} relative overflow-hidden`}>\n                  <div className=\"relative z-10 flex flex-col items-center justify-center h-full\">\n                    {member.image ? (\n                      <div className=\"w-24 h-24 mb-4 rounded-full overflow-hidden border-4 border-white/30 shadow-lg\">\n                        <img \n                          src={member.image} \n                          alt={member.name}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"w-24 h-24 mb-4 rounded-full bg-white/20 backdrop-blur-sm flex items-center justify-center border-4 border-white/30\">\n                        <User className=\"w-12 h-12 text-white\" />\n                      </div>\n                    )}\n                    <div className=\"text-2xl md:text-3xl font-bold text-white mb-2 drop-shadow-lg\">\n                      {member.name}\n                    </div>\n                    <div className=\"text-base md:text-lg text-white/90 font-medium mb-3 drop-shadow\">\n                      {member.role}\n                    </div>\n                    <p className=\"text-sm text-white/80 leading-relaxed drop-shadow px-4\">\n                      {member.description}\n                    </p>\n                  </div>\n                </div>\n              </motion.div>\n            );\n          })}\n        </div>\n      </motion.div>\n    </section>\n  );\n}\n","size_bytes":5705},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/partner-section.tsx":{"content":"import { ScrollReveal } from \"./scroll-reveal\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { UnisonLogo } from \"./ui/unison-logo\";\nimport { OfficialUnisonLogo } from \"./ui/unison-logo\";\nimport { UnisonLogoNoShape } from \"./ui/unison-logo\";\nimport { AnimatedBackground } from \"./animated-background\";\n\nexport function PartnerSection() {\n  return (\n    <AnimatedBackground intensity=\"medium\" className=\"py-20 md:py-32 px-4 md:px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <ScrollReveal>\n          <h2 className=\"text-4xl md:text-5xl font-light text-center mb-16\">Our Partner Community</h2>\n          <Card className=\"rounded-2xl p-8 md:p-12 text-center bg-black/30 backdrop-blur-md border-white/10 shadow-none\">\n            <CardContent className=\"p-0\">\n              <div className=\"mb-8\">\n                <h3 className=\"text-3xl font-bold mb-4\">Unison Music App</h3>\n                <p className=\"text-xl text-muted-foreground mb-8\">Make music together. Let your unfinished tracks grow.</p>\n              </div>\n              \n              <div className=\"grid md:grid-cols-2 gap-6 md:gap-8 items-center\">\n                <div className=\"text-left\">\n                  <h4 className=\"text-xl md:text-2xl font-semibold mb-4\">Ungatekeep Collaboration</h4>\n                  <ul className=\"space-y-3 text-sm md:text-base text-muted-foreground\">\n                    <li>• Collaborate live with musicians worldwide</li>\n                    <li>• Seamless stitching and stem creation</li>\n                    <li>• Inspire and connect with creative community</li>\n                    <li>• Automate stems with a single click</li>\n                  </ul>\n                </div>\n                <div className=\"flex justify-center items-center h-full\">\n                  <div\n                    className=\"rounded-2xl overflow-hidden flex items-center justify-center w-full\"\n                    style={{\n                      aspectRatio: '4 / 3',\n                      maxWidth: 420,\n                      width: '100%',\n                      background: 'url(https://cdn.dribbble.com/userupload/3914102/file/original-5025a045fbda683af63bf5113891a4c7.png?resize=1024x768&vertical=center) center/cover no-repeat'\n                    }}\n                  />\n                </div>\n              </div>\n              \n              <div className=\"mt-8\">\n                <Button \n                  asChild \n                  className=\"bg-white text-black hover:bg-gray-200\"\n                  data-testid=\"button-unison-visit\"\n                >\n                  <a href=\"https://unisonmusicapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Visit Unison Music App\n                  </a>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </ScrollReveal>\n      </div>\n    </AnimatedBackground>\n  );\n}\n","size_bytes":2953},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/boot-screen.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface BootScreenProps {\n  onComplete: () => void;\n}\n\nexport function BootScreen({ onComplete }: BootScreenProps) {\n  const [lines, setLines] = useState<string[]>([]);\n  const [currentLineIndex, setCurrentLineIndex] = useState(0);\n  const [showClouds, setShowClouds] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => setShowClouds(true), 500);\n  }, []);\n\n  const bootLines = [\n    'MATE NATIONS MUSIC BIOS (C) 2024 Mate Nations, Inc.',\n    'BIOS Date: 11/10/2024 06:30:00 Ver: 01.00.24',\n    'Processor: Audio Core @ 440Hz',\n    'System Speed: 128BPM',\n    'Music Memory: 16-bit Stereo, 48kHz Sample Rate',\n    '',\n    'Memory Test: 808 Kicks OK | 909 Snares OK | Synths OK',\n    'Audio ROM Version: 2.4.0',\n    'VST/AU Plugin Support: Enabled',\n    '',\n    'Loading Audio Peripherals...',\n    '64KB Audio Buffer OK',\n    '',\n    'Input Devices: 1 MIDI Controller, 1 Audio Interface, 2 Turntables',\n    '',\n    'Detecting Music Catalog...',\n    'Device #01: Vinyl Collection *CLASSICS*',\n    'Device #02: Digital Archive *FUTURE SOUNDS*',\n    'Device #03: Live Recording Studio *SESSIONS*',\n    '',\n    '03 music sources detected and operational.',\n    '',\n    '(C) Mate Nations, Inc.',\n    '64-0424-00001-110-101010-MATE-NATIONS-MUS1C',\n    '',\n    'Booting from Music Drive...',\n    '',\n    'Initializing... \"night theme\"...',\n    'Initializing... \"day theme\"...',\n    '',\n    'READY.',\n    '',\n    'C:\\\\> MATE_NATIONS.MUS',\n  ];\n\n  useEffect(() => {\n    if (currentLineIndex < bootLines.length) {\n      const timer = setTimeout(() => {\n        setLines(prev => [...prev, bootLines[currentLineIndex]]);\n        setCurrentLineIndex(prev => prev + 1);\n      }, bootLines[currentLineIndex] === '' ? 100 : 150);\n\n      return () => clearTimeout(timer);\n    } else {\n      const completeTimer = setTimeout(() => {\n        onComplete();\n      }, 1000);\n\n      return () => clearTimeout(completeTimer);\n    }\n  }, [currentLineIndex, bootLines, onComplete]);\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"fixed inset-0 z-[100] bg-gradient-to-br from-violet-950 via-blue-950 to-indigo-950 flex items-center justify-center p-8 overflow-hidden\"\n      >\n        {/* Floating Clouds/Bubbles */}\n        {showClouds && (\n          <>\n            <motion.div\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ opacity: 0.3, scale: 1, y: [0, -20, 0] }}\n              transition={{ duration: 3, repeat: Infinity, ease: \"easeInOut\" }}\n              className=\"absolute top-20 left-[10%] w-32 h-20 bg-blue-400 rounded-full blur-xl\"\n            />\n            <motion.div\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ opacity: 0.4, scale: 1, y: [0, -15, 0] }}\n              transition={{ duration: 4, repeat: Infinity, ease: \"easeInOut\", delay: 0.5 }}\n              className=\"absolute top-32 right-[15%] w-40 h-24 bg-violet-400 rounded-full blur-xl\"\n            />\n            <motion.div\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ opacity: 0.35, scale: 1, y: [0, -25, 0] }}\n              transition={{ duration: 3.5, repeat: Infinity, ease: \"easeInOut\", delay: 1 }}\n              className=\"absolute bottom-24 left-[20%] w-48 h-28 bg-blue-300 rounded-full blur-2xl\"\n            />\n            <motion.div\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ opacity: 0.3, scale: 1, y: [0, -18, 0] }}\n              transition={{ duration: 4.5, repeat: Infinity, ease: \"easeInOut\", delay: 1.5 }}\n              className=\"absolute bottom-32 right-[25%] w-36 h-22 bg-indigo-400 rounded-full blur-xl\"\n            />\n          </>\n        )}\n\n        <div className=\"w-full max-w-4xl font-mono text-sm md:text-base relative z-10\">\n          <div className=\"space-y-1\">\n            {lines.map((line, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.1 }}\n                className={`${\n                  line.includes('(C)') || line.includes('BIOS') || line.includes('C:\\\\>')\n                    ? 'text-cyan-300'\n                    : line.includes('OK') || line.includes('READY')\n                    ? 'text-green-300'\n                    : line.includes('Device') || line.includes('Loading')\n                    ? 'text-violet-300'\n                    : 'text-blue-200'\n                }`}\n              >\n                {line || '\\u00A0'}\n              </motion.div>\n            ))}\n            <motion.span\n              animate={{ opacity: [1, 0, 1] }}\n              transition={{ duration: 0.8, repeat: Infinity }}\n              className=\"inline-block w-2 h-4 bg-cyan-300 ml-1\"\n            />\n          </div>\n        </div>\n\n        {/* Loading Bar */}\n        {currentLineIndex >= bootLines.length - 3 && (\n          <motion.div\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"absolute bottom-24 left-1/2 transform -translate-x-1/2 w-full max-w-md\"\n          >\n            <div className=\"text-center text-violet-300 mb-4 font-mono text-sm\">\n              LOADING MUSIC OS...\n            </div>\n            <div className=\"h-2 bg-violet-950 rounded-full overflow-hidden\">\n              <motion.div\n                initial={{ width: 0 }}\n                animate={{ width: '100%' }}\n                transition={{ duration: 2, ease: \"easeInOut\" }}\n                className=\"h-full bg-gradient-to-r from-violet-500 via-blue-500 to-cyan-500\"\n              />\n            </div>\n          </motion.div>\n        )}\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n","size_bytes":5896},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/modern-ambassadors.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ModernCard } from \"./modern-card\";\nimport ambassadorDjImage from \"@assets/ambassador_dj_1757912854805.jpeg\";\nimport ambassadorArtistImage from \"@assets/ambassador_artist_1757912842410.jpeg\";\n\nexport function ModernAmbassadors() {\n  return (\n    <section className=\"py-20 px-6 relative z-10\">\n      <div className=\"max-w-6xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-12\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">Our Brand Ambassadors</h2>\n        </motion.div>\n\n        <div className=\"grid md:grid-cols-2 gap-8\">\n          <ModernCard delay={0} gradient=\"bg-gradient-to-br from-blue-500/40 to-blue-700/30\">\n            <div className=\"text-center\">\n              <div className=\"w-32 h-32 mx-auto mb-6 rounded-full overflow-hidden bg-gradient-to-br from-purple-500 to-blue-600 ring-4 ring-blue-400/30\">\n                <img \n                  src={ambassadorDjImage} \n                  alt=\"Masibulele Pika\"\n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n              <h3 className=\"text-2xl font-bold text-white mb-2\">Masibulele Pika</h3>\n              <p className=\"text-lg text-blue-200 mb-4\">Professional DJ & Music Curator</p>\n              <p className=\"text-sm leading-relaxed text-gray-100\">\n                Masibulele Pika brings cutting-edge DJ skills and deep music knowledge to Mate Nation. As a professional DJ, he represents our commitment to discovering and promoting exceptional talent in the electronic and dance music scenes.\n              </p>\n            </div>\n          </ModernCard>\n\n          <ModernCard delay={0.1} gradient=\"bg-gradient-to-br from-orange-500/40 to-red-600/30\">\n            <div className=\"text-center\">\n              <div className=\"w-32 h-32 mx-auto mb-6 rounded-full overflow-hidden bg-gradient-to-br from-pink-500 to-purple-600 ring-4 ring-orange-400/30\">\n                <img \n                  src={ambassadorArtistImage} \n                  alt=\"Demetrius Lucas\"\n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n              <h3 className=\"text-2xl font-bold text-white mb-2\">Demetrius Lucas</h3>\n              <p className=\"text-lg text-orange-200 mb-4\">Award-winning Music Producer</p>\n              <p className=\"text-sm leading-relaxed text-gray-100\">\n                Demetrius Lucas is an innovative music producer who embodies Mate Nation's vision of revolutionary sound. His expertise in modern production techniques and artist development makes him an invaluable ambassador for our record label.\n              </p>\n            </div>\n          </ModernCard>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2903},"client/src/components/minimalist-background.tsx":{"content":"import React from \"react\";\n\ninterface MinimalistBackgroundProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\n// A minimalist, continuous background (soft gradient, no animation)\nexport function MinimalistBackground({ children, className = \"\" }: MinimalistBackgroundProps) {\n  return (\n    <div\n      className={`relative min-h-screen w-full ${className}`}\n      style={{\n        background: \"linear-gradient(135deg, #0f172a 0%, #1e293b 60%, #334155 100%)\",\n        backgroundAttachment: \"fixed\"\n      }}\n    >\n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </div>\n  );\n}","size_bytes":608},"client/src/components/modern-team.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion, useMotionValue, useTransform, useAnimation, PanInfo } from \"framer-motion\";\nimport { ModernCard } from \"./modern-card\";\nimport { User } from \"lucide-react\";\nimport avikImage from \"@assets/AVIK_1757912854902.jpeg\";\nimport amritImage from \"@assets/Amrit_1757912855008.jpeg\";\nimport ceoImage from \"@assets/ceo_1757912854870.jpeg\";\nimport abhayImage from \"@assets/Abhay_1757912854967.jpeg\";\n\ninterface TeamMember {\n  name: string;\n  role: string;\n  description: string;\n  image?: string;\n  gradient: string;\n}\n\n// Permanent gradient assignments for each team member\nconst gradients = [\n  'linear-gradient(180deg, #a855f7 0%, #ec4899 50%, #3b82f6 100%)', // Purple to Pink to Blue\n  'linear-gradient(180deg, #ec4899 0%, #f97316 50%, #ef4444 100%)', // Pink to Orange to Red  \n  'linear-gradient(180deg, #06b6d4 0%, #8b5cf6 50%, #d946ef 100%)', // Cyan to Purple to Fuchsia\n  'linear-gradient(180deg, #10b981 0%, #06b6d4 50%, #3b82f6 100%)', // Green to Cyan to Blue\n  'linear-gradient(180deg, #f59e0b 0%, #ec4899 50%, #8b5cf6 100%)', // Amber to Pink to Purple\n  'linear-gradient(180deg, #6366f1 0%, #a855f7 50%, #ec4899 100%)', // Indigo to Purple to Pink\n  'linear-gradient(180deg, #14b8a6 0%, #06b6d4 50%, #3b82f6 100%)', // Teal to Cyan to Blue\n  'linear-gradient(180deg, #f43f5e 0%, #ec4899 50%, #a855f7 100%)', // Rose to Pink to Purple\n  'linear-gradient(180deg, #8b5cf6 0%, #6366f1 50%, #3b82f6 100%)', // Purple to Indigo to Blue\n  'linear-gradient(180deg, #ec4899 0%, #d946ef 50%, #a855f7 100%)', // Pink to Fuchsia to Purple\n];\n\nconst leadership: TeamMember[] = [\n  {\n    name: \"AVIK\",\n    role: \"Founder & EDM Producer\",\n    description: \"Visionary founder driving Mate Nation's mission\",\n    image: avikImage,\n    gradient: gradients[0]\n  },\n  {\n    name: \"Alex Mendez\",\n    role: \"CEO\",\n    description: \"Strategic leader orchestrating growth\",\n    image: ceoImage,\n    gradient: gradients[1]\n  },\n  {\n    name: \"Amrit\",\n    role: \"Investor & Sponsorship\",\n    description: \"Financial strategist and partnership architect\",\n    image: amritImage,\n    gradient: gradients[2]\n  }\n];\n\nconst team: TeamMember[] = [\n  { name: \"Alvin\", role: \"Director\", description: \"Operations oversight\", gradient: gradients[3] },\n  { name: \"Abhay\", role: \"A&R Specialist\", description: \"Pop & electronic music\", image: abhayImage, gradient: gradients[4] },\n  { name: \"Stefflen\", role: \"Head of Digital Art\", description: \"Visual identity leader\", gradient: gradients[5] },\n  { name: \"Soumyadeep\", role: \"Head of Video\", description: \"Video production maestro\", gradient: gradients[6] },\n  { name: \"Peter\", role: \"Release Coordinator\", description: \"Distribution management\", gradient: gradients[7] },\n  { name: \"Prajit\", role: \"Strategist\", description: \"Market strategy expert\", gradient: gradients[8] },\n  { name: \"Utsav\", role: \"Manager\", description: \"Operations coordinator\", gradient: gradients[9] },\n];\n\nconst allCrew = [...leadership, ...team];\n\nconst SwipeableCard = ({ member, index, totalCards, onSwipe }: {\n  member: TeamMember;\n  index: number;\n  totalCards: number;\n  onSwipe: (direction: number) => void;\n}) => {\n  const x = useMotionValue(0);\n  const rotate = useTransform(x, [-300, 300], [-20, 20]);\n  const opacity = useTransform(x, [-300, 0, 300], [0.5, 1, 0.5]);\n  const controls = useAnimation();\n\n  useEffect(() => {\n    if (index === 0) {\n      x.set(0);\n    }\n  }, [index, x]);\n\n  const handleDragEnd = (_event: MouseEvent | TouchEvent | PointerEvent, info: PanInfo) => {\n    const threshold = 80;\n    const velocityThreshold = 500;\n    \n    if (\n      Math.abs(info.offset.x) > threshold ||\n      Math.abs(info.velocity.x) > velocityThreshold\n    ) {\n      const direction = info.offset.x > 0 ? 1 : -1;\n      \n      // Immediately trigger the card swap so next card starts moving forward\n      onSwipe(direction);\n      \n      // Animate the swiped card out with smooth easing\n      controls.start({\n        x: direction * 600,\n        opacity: 0,\n        rotate: direction * 30,\n        transition: { \n          duration: 0.4,\n          ease: [0.32, 0.72, 0, 1]\n        }\n      });\n    } else {\n      controls.start({ \n        x: 0,\n        rotate: 0,\n        transition: { \n          type: 'spring', \n          stiffness: 400, \n          damping: 35,\n          mass: 0.8\n        }\n      });\n    }\n  };\n\n  return (\n    <motion.div\n      layoutId={member.name}\n      drag={index === 0 ? \"x\" : false}\n      dragElastic={0.5}\n      dragConstraints={{ left: -500, right: 500 }}\n      style={{ \n        x: index === 0 ? x : index * 15, \n        rotate: index === 0 ? rotate : index * 3, \n        opacity: index === 0 ? opacity : 1,\n        zIndex: totalCards - index,\n        background: member.gradient\n      }}\n      whileDrag={{ cursor: 'grabbing', scale: 1.08 }}\n      onDragEnd={index === 0 ? handleDragEnd : undefined}\n      animate={index === 0 ? {\n        scale: 1,\n        y: 0,\n        rotate: 0,\n        x: 0,\n        opacity: 1\n      } : {\n        scale: 1 - index * 0.03,\n        y: index * 12,\n        rotate: index * 3,\n        x: index * 15,\n        opacity: 1\n      }}\n      initial={false}\n      transition={{ \n        type: 'spring', \n        stiffness: 300, \n        damping: 35,\n        mass: 0.8\n      }}\n      className={`absolute w-[300px] md:w-[340px] h-[460px] md:h-[500px] rounded-[20px] shadow-[0_20px_60px_rgba(0,0,0,0.3)] overflow-visible ${index === 0 ? 'cursor-grab active:cursor-grabbing' : ''}`}\n    >\n      <div className=\"h-full flex flex-col items-center justify-center p-8 text-center\">\n        {member.image ? (\n          <div className=\"w-28 h-28 mb-5 rounded-full overflow-hidden border-4 border-white/30 shadow-xl\">\n            <img \n              src={member.image} \n              alt={member.name}\n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n        ) : (\n          <div className=\"w-28 h-28 mb-5 rounded-full bg-white/20 backdrop-blur-sm flex items-center justify-center border-4 border-white/30\">\n            <User className=\"w-14 h-14 text-white\" />\n          </div>\n        )}\n        <div className=\"text-3xl md:text-4xl font-bold text-white mb-2 drop-shadow-xl\">\n          {member.name}\n        </div>\n        <div className=\"text-lg md:text-xl text-white/95 font-medium mb-4 drop-shadow-lg\">\n          {member.role}\n        </div>\n        <p className=\"text-base text-white/85 leading-relaxed drop-shadow-md px-4\">\n          {member.description}\n        </p>\n      </div>\n    </motion.div>\n  );\n};\n\nexport function ModernTeam() {\n  const [cards, setCards] = useState(allCrew);\n\n  const handleSwipe = (direction: number) => {\n    setCards(prev => {\n      // Both left and right swipe move forward in the same direction\n      const newCards = [...prev];\n      const swiped = newCards.shift();\n      if (swiped) {\n        return [...newCards, swiped];\n      }\n      return prev;\n    });\n  };\n\n  return (\n    <section className=\"py-20 px-6 relative z-10\" id=\"team\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">The Crew</h2>\n          <p className=\"text-gray-300 text-lg mb-4\">\n            Meet the sound makers\n          </p>\n          <p className=\"text-sm text-gray-400\">\n            <span className=\"font-bold\">← Swipe to see all members →</span>\n          </p>\n        </motion.div>\n\n        <div className=\"relative h-[500px] md:h-[550px] mb-20 flex items-center justify-center\">\n          {cards.slice(0, 3).map((member, index) => (\n            <SwipeableCard\n              key={member.name}\n              member={member}\n              index={index}\n              totalCards={3}\n              onSwipe={handleSwipe}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8030},"client/src/components/music-hunt.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Music, Disc, Mic2, Guitar, Headphones, Radio, Trophy } from 'lucide-react';\n\nconst instruments = [\n  { id: 'vinyl', name: 'Vinyl Record', icon: Disc, found: false },\n  { id: 'mic', name: 'Microphone', icon: Mic2, found: false },\n  { id: 'guitar', name: 'Guitar', icon: Guitar, found: false },\n  { id: 'headphones', name: 'Headphones', icon: Headphones, found: false },\n  { id: 'radio', name: 'Radio', icon: Radio, found: false },\n  { id: 'note', name: 'Music Note', icon: Music, found: false },\n];\n\nexport function MusicHunt() {\n  const [foundItems, setFoundItems] = useState<string[]>([]);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const saved = localStorage.getItem('music-hunt-found');\n    if (saved) {\n      setFoundItems(JSON.parse(saved));\n    }\n  }, []);\n\n  const handleFind = (id: string) => {\n    if (!foundItems.includes(id)) {\n      const newFound = [...foundItems, id];\n      setFoundItems(newFound);\n      localStorage.setItem('music-hunt-found', JSON.stringify(newFound));\n      \n      if (newFound.length === instruments.length) {\n        setTimeout(() => setShowModal(true), 500);\n      }\n    }\n  };\n\n  return (\n    <>\n      <motion.button\n        onClick={() => setShowModal(true)}\n        className=\"fixed bottom-6 right-6 z-50 p-4 rounded-full bg-card border-2 border-primary bubble-glow\"\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        <div className=\"flex items-center gap-2\">\n          <Trophy className=\"w-5 h-5 text-accent\" />\n          <div className=\"retro-text text-sm text-primary\">\n            {foundItems.length}/{instruments.length}\n          </div>\n        </div>\n      </motion.button>\n\n      <AnimatePresence>\n        {showModal && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-[60] flex items-center justify-center p-6\"\n            onClick={() => setShowModal(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n              className=\"bg-card border-4 border-primary rounded-3xl p-8 max-w-md w-full bubble-glow\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"retro-text text-3xl text-primary mb-4 text-center\">\n                MUSIC HUNT\n              </div>\n              <div className=\"text-center text-muted-foreground mb-6\">\n                {foundItems.length === instruments.length\n                  ? '🎉 You found all the instruments!'\n                  : `Find all ${instruments.length} hidden instruments scattered throughout the site!`}\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-4\">\n                {instruments.map((item) => {\n                  const isFound = foundItems.includes(item.id);\n                  return (\n                    <motion.div\n                      key={item.id}\n                      className={`aspect-square rounded-2xl border-2 ${\n                        isFound ? 'border-green-400 bg-green-400/20' : 'border-border bg-secondary'\n                      } flex flex-col items-center justify-center p-3 transition-all`}\n                      whileHover={isFound ? {} : { scale: 1.05 }}\n                    >\n                      {isFound ? (\n                        <item.icon className=\"w-8 h-8 text-green-400 mb-2\" />\n                      ) : (\n                        <div className=\"w-8 h-8 mb-2 text-muted-foreground\">?</div>\n                      )}\n                      <div className=\"text-xs text-center retro-text\">\n                        {isFound ? item.name : '???'}\n                      </div>\n                    </motion.div>\n                  );\n                })}\n              </div>\n\n              {foundItems.length === instruments.length && (\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"mt-6 text-center\"\n                >\n                  <button className=\"px-6 py-3 bg-accent text-accent-foreground rounded-full retro-text hover:bg-primary hover:text-primary-foreground transition-all bubble-glow\">\n                    [ CLAIM REWARD ]\n                  </button>\n                </motion.div>\n              )}\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      <div className=\"hidden\">\n        {instruments.map((item, index) => (\n          <motion.div\n            key={item.id}\n            className={`fixed cursor-pointer z-40 ${\n              foundItems.includes(item.id) ? 'opacity-0 pointer-events-none' : 'opacity-100'\n            }`}\n            style={{\n              top: `${20 + (index * 15)}%`,\n              left: `${10 + (index * 12)}%`,\n            }}\n            onClick={() => handleFind(item.id)}\n            whileHover={{ scale: 1.2, rotate: 10 }}\n            animate={{\n              y: [0, -10, 0],\n              rotate: [0, 5, -5, 0],\n            }}\n            transition={{\n              duration: 2,\n              repeat: Infinity,\n              delay: index * 0.2,\n            }}\n          >\n            <item.icon className=\"w-6 h-6 text-accent note-float\" />\n          </motion.div>\n        ))}\n      </div>\n    </>\n  );\n}\n","size_bytes":5571},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"client/dist\"),\n    emptyOutDir: true,\n  },\n  server: {\n    host: \"0.0.0.0\",\n    port: 5000,\n    strictPort: true,\n    allowedHosts: true,\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1054},"client/src/pages/home.tsx":{"content":"import { ModernHero } from \"@/components/modern-hero\";\nimport { ModernMenu } from \"@/components/modern-menu\";\nimport { ModernGenres } from \"@/components/modern-genres\";\nimport { ModernAbout } from \"@/components/modern-about\";\nimport { ModernPartners } from \"@/components/modern-partners\";\nimport { ModernAmbassadors } from \"@/components/modern-ambassadors\";\nimport { ModernTeam } from \"@/components/modern-team\";\nimport { ModernContact } from \"@/components/modern-contact\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { SlidingSections } from \"@/components/sliding-sections\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport default function Home() {\n  return (\n    <AnimatePresence>\n      <motion.div \n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.5, ease: [0.22, 1, 0.36, 1] }}\n        className=\"relative min-h-screen\"\n      >\n        <ThemeToggle />\n        <ModernMenu />\n\n        <SlidingSections>\n          <ModernHero />\n          <ModernGenres />\n          <div id=\"about\">\n            <ModernAbout />\n          </div>\n          <ModernPartners />\n          <ModernAmbassadors />\n          <ModernTeam />\n          <div className=\"flex flex-col min-h-screen\">\n            <div className=\"flex-1\">\n              <ModernContact />\n            </div>\n            <ModernFooter />\n          </div>\n        </SlidingSections>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n","size_bytes":1559},"client/src/components/retro-about.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Zap, Globe, Users } from 'lucide-react';\n\nexport function RetroAbout() {\n  const features = [\n    {\n      icon: Zap,\n      title: 'INNOVATION',\n      desc: 'Revolutionizing the music industry with cutting-edge technology',\n      color: 'text-yellow-400'\n    },\n    {\n      icon: Globe,\n      title: 'GLOBAL REACH',\n      desc: 'Connecting artists with audiences worldwide',\n      color: 'text-cyan-400'\n    },\n    {\n      icon: Users,\n      title: 'COMMUNITY',\n      desc: 'Building a family of passionate music creators',\n      color: 'text-pink-400'\n    }\n  ];\n\n  return (\n    <section className=\"py-20 px-6 relative overflow-hidden\">\n      <div className=\"absolute inset-0 musical-wave opacity-5\" />\n      \n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n        className=\"max-w-6xl mx-auto\"\n      >\n        <div className=\"text-center mb-16\">\n          <div className=\"retro-text text-5xl md:text-6xl text-primary mb-6\">\n            ABOUT MATE NATIONS\n          </div>\n          <div className=\"w-24 h-1 bg-accent mx-auto mb-8\" />\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-12 mb-16\">\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.2 }}\n            className=\"bg-card border-2 border-primary rounded-3xl p-8\"\n          >\n            <div className=\"retro-text text-2xl text-primary mb-4\">\n              {'>'} MISSION_STATEMENT.TXT\n            </div>\n            <p className=\"text-foreground leading-relaxed mb-4\">\n              <strong className=\"text-primary\">Mate Nations</strong> is an innovative record label revolutionizing the music industry. We embrace and celebrate all music genres, welcoming artists from every musical background and style.\n            </p>\n            <p className=\"text-foreground leading-relaxed mb-4\">\n              We transform talented artists into global superstars through innovative music production, strategic brand development, and worldwide distribution networks.\n            </p>\n            <p className=\"text-foreground leading-relaxed\">\n              Founded on the belief that exceptional music transcends boundaries, Mate Nations combines cutting-edge technology with traditional artistry to create unique sonic experiences. Our dedicated team of industry veterans and creative innovators work tirelessly to nurture raw talent, providing comprehensive support from studio production to international marketing. With state-of-the-art recording facilities, strategic partnerships with major streaming platforms, and a passionate commitment to artistic excellence, we're not just building careers—we're shaping the future of music. Whether you're an emerging artist with a fresh sound or an established performer looking to redefine your legacy, Mate Nations is your partner in musical evolution.\n            </p>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.3 }}\n            className=\"bg-card border-2 border-primary rounded-3xl p-8\"\n          >\n            <div className=\"retro-text text-2xl text-primary mb-4\">\n              {'>'} SERVICES.EXE\n            </div>\n            <ul className=\"space-y-3\">\n              {[\n                'Comprehensive artist development',\n                'Professional recording services',\n                'Global distribution networks',\n                'Strategic marketing campaigns',\n                'Direct access to streaming platforms',\n                'Industry expertise & creative support'\n              ].map((service, index) => (\n                <motion.li\n                  key={index}\n                  initial={{ opacity: 0, x: -20 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: 0.4 + index * 0.1 }}\n                  className=\"flex items-center gap-2\"\n                >\n                  <span className=\"text-accent\">▶</span>\n                  <span className=\"text-foreground\">{service}</span>\n                </motion.li>\n              ))}\n            </ul>\n          </motion.div>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ delay: 0.5 + index * 0.1 }}\n              className=\"text-center group\"\n            >\n              <div className=\"mb-4 flex justify-center\">\n                <div className=\"p-6 bg-card border-2 border-border group-hover:border-primary rounded-full transition-all duration-300\">\n                  <feature.icon className={`w-12 h-12 ${feature.color}`} />\n                </div>\n              </div>\n              <div className=\"retro-text text-xl text-primary mb-2\">\n                {feature.title}\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                {feature.desc}\n              </p>\n            </motion.div>\n          ))}\n        </div>\n      </motion.div>\n    </section>\n  );\n}\n","size_bytes":5540},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/hero-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { TypingLogo } from \"./typing-logo\";\nimport { AnimatedBackground } from \"./animated-background\";\n\nexport function HeroSection() {\n  return (\n    <AnimatedBackground intensity=\"high\" className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center z-10 max-w-4xl mx-auto px-4 md:px-6\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 1 }}\n          className=\"mb-16 md:mb-20\"\n        >\n          <TypingLogo />\n        </motion.div>\n        \n        <motion.p\n          className=\"text-xl sm:text-2xl md:text-3xl lg:text-4xl leading-relaxed max-w-3xl mx-auto mb-10\"\n          style={{ fontWeight: 700 }}\n          initial={{ opacity: 0, y: 60 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.3 }}\n          data-testid=\"text-hero-tagline\"\n        >\n          The music of revolution, we are the solution.\n        </motion.p>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.6 }}\n        >\n          <button\n            className=\"px-8 py-3 bg-white/10 hover:bg-white/20 border border-white/30 rounded-full backdrop-blur-sm transition-all duration-300 text-white font-medium hover:scale-105 active:scale-95\"\n            onClick={() => window.scrollTo({ top: window.innerHeight, behavior: 'smooth' })}\n            data-testid=\"button-visit\"\n          >\n            Visit ↓\n          </button>\n        </motion.div>\n      </div>\n    </AnimatedBackground>\n  );\n}\n","size_bytes":1670},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"README.md":{"content":"## Hi there 👋\n\n<!--\n**matenations/matenations** is a ✨ _special_ ✨ repository because its `README.md` (this file) appears on your GitHub profile.\n\nHere are some ideas to get you started:\n\n- 🔭 I’m currently working on ...\n- 🌱 I’m currently learning ...\n- 👯 I’m looking to collaborate on ...\n- 🤔 I’m looking for help with ...\n- 💬 Ask me about ...\n- 📫 How to reach me: ...\n- 😄 Pronouns: ...\n- ⚡ Fun fact: ...\n-->\n","size_bytes":448},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ambassador-section.tsx":{"content":"import { ScrollReveal } from \"./scroll-reveal\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport ambassadorDjImage from \"@assets/ambassador_dj_1757912854805.jpeg\";\nimport ambassadorArtistImage from \"@assets/ambassador_artist_1757912842410.jpeg\";\nimport { AnimatedBackground } from \"./animated-background\";\nimport { MinimalistBackground } from \"./minimalist-background\";\n\nexport function AmbassadorSection() {\n  return (\n    <MinimalistBackground className=\"py-20 md:py-32 px-4 md:px-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <ScrollReveal>\n          <h2 className=\"text-4xl md:text-5xl font-light text-center mb-16\">Our Brand Ambassadors</h2>\n          <div className=\"grid md:grid-cols-2 gap-6 md:gap-8\">\n            <Card className=\"rounded-2xl p-6 md:p-8 bg-black/30 backdrop-blur-md border-white/10 text-center hover:scale-105 transition-transform duration-300\">\n              <CardContent className=\"p-0\">\n                <div className=\"w-32 h-32 mx-auto mb-6 rounded-full overflow-hidden bg-gradient-to-br from-purple-500 to-blue-600\">\n                  <img \n                    src={ambassadorDjImage} \n                    alt=\"Masibulele Pika\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <h3 className=\"text-2xl font-bold mb-2\">Masibulele Pika</h3>\n                <p className=\"text-lg text-muted-foreground mb-4\">Professional DJ & Music Curator</p>\n                <p className=\"text-sm leading-relaxed text-gray-300\">\n                  Masibulele Pika brings cutting-edge DJ skills and deep music knowledge to Mate Nations. As a professional DJ, he represents our commitment to discovering and promoting exceptional talent in the electronic and dance music scenes.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"rounded-2xl p-6 md:p-8 bg-black/30 backdrop-blur-md border-white/10 text-center hover:scale-105 transition-transform duration-300\">\n              <CardContent className=\"p-0\">\n                <div className=\"w-32 h-32 mx-auto mb-6 rounded-full overflow-hidden bg-gradient-to-br from-pink-500 to-purple-600\">\n                  <img \n                    src={ambassadorArtistImage} \n                    alt=\"Demetrius Lucas\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <h3 className=\"text-xl md:text-2xl font-bold mb-2\">Demetrius Lucas</h3>\n                <p className=\"text-base md:text-lg text-muted-foreground mb-4\">Award-winning Music Producer</p>\n                <p className=\"text-sm leading-relaxed text-gray-300\">\n                  Demetrius Lucas is an innovative music producer who embodies Mate Nations' vision of revolutionary sound. His expertise in modern production techniques and artist development makes him an invaluable ambassador for our record label.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </ScrollReveal>\n      </div>\n  </MinimalistBackground>\n  );\n}\n","size_bytes":3084},"client/src/components/typing-logo.tsx":{"content":"import { useState, useEffect } from \"react\";\n\nexport function TypingLogo() {\n  const [displayText, setDisplayText] = useState(\"\");\n  const [isBlinking, setIsBlinking] = useState(false);\n  const [blinkCount, setBlinkCount] = useState(0);\n  const [showCursor, setShowCursor] = useState(true);\n  const fullText = \"mate.\";\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    \n    const animate = async () => {\n      // Typing phase\n      for (let i = 0; i <= fullText.length; i++) {\n        await new Promise(resolve => {\n          timeoutId = setTimeout(() => {\n            setDisplayText(fullText.slice(0, i));\n            resolve(null);\n          }, 150);\n        });\n      }\n\n      // Blinking phase (7 times)\n      setIsBlinking(true);\n      for (let i = 0; i < 7; i++) {\n        await new Promise(resolve => {\n          timeoutId = setTimeout(() => {\n            setShowCursor((prev: boolean) => !prev);\n            setBlinkCount(i + 1);\n            resolve(null);\n          }, 300);\n        });\n        await new Promise(resolve => {\n          timeoutId = setTimeout(() => {\n            setShowCursor((prev: boolean) => !prev);\n            resolve(null);\n          }, 300);\n        });\n      }\n      setIsBlinking(false);\n      setBlinkCount(0);\n\n      // Wait a bit before deleting\n      await new Promise(resolve => {\n        timeoutId = setTimeout(resolve, 500);\n      });\n\n      // Deleting phase\n      for (let i = fullText.length; i >= 0; i--) {\n        await new Promise(resolve => {\n          timeoutId = setTimeout(() => {\n            setDisplayText(fullText.slice(0, i));\n            resolve(null);\n          }, 100);\n        });\n      }\n\n      // Wait before restarting\n      await new Promise(resolve => {\n        timeoutId = setTimeout(resolve, 500);\n      });\n\n      // Restart the animation\n      animate();\n    };\n\n    animate();\n\n    return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, []);\n\n  return (\n    <div \n      className=\"text-6xl md:text-8xl lg:text-9xl font-bold text-center\"\n      style={{ \n        fontFamily: 'Inter, sans-serif',\n        fontWeight: 700,\n        letterSpacing: '-0.05em'\n      }}\n      data-testid=\"text-typing-logo\"\n    >\n      <span className=\"inline-block\" style={{ borderRadius: '1rem' }}>\n        {displayText}\n      </span>\n      <span \n        className={`inline-block w-1 h-16 md:h-24 lg:h-32 bg-white ml-1 align-middle ${showCursor ? 'opacity-100' : 'opacity-0'}`}\n        style={{ \n          transition: 'opacity 0.1s',\n          verticalAlign: 'middle',\n          marginBottom: '0.5rem'\n        }}\n      />\n    </div>\n  );\n}\n","size_bytes":2615},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/theme-toggle.tsx":{"content":"import { useTheme } from '@/contexts/theme-context';\nimport { Sun, Moon } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\nexport function ThemeToggle() {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <motion.button\n      onClick={toggleTheme}\n      className=\"fixed top-6 right-6 z-50 p-3 rounded-full bg-white/10 backdrop-blur-xl border border-white/20 hover:bg-white/20 transition-all duration-300 group shadow-lg shadow-black/20\"\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n      aria-label=\"Toggle theme\"\n    >\n      <div className=\"relative w-6 h-6\">\n        <motion.div\n          initial={{ opacity: 0, rotate: -90 }}\n          animate={{ \n            opacity: theme === 'day' ? 1 : 0,\n            rotate: theme === 'day' ? 0 : -90 \n          }}\n          transition={{ duration: 0.3 }}\n          className=\"absolute inset-0\"\n        >\n          <Sun className=\"w-6 h-6 text-amber-500\" />\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 1, rotate: 0 }}\n          animate={{ \n            opacity: theme === 'night' ? 1 : 0,\n            rotate: theme === 'night' ? 0 : 90 \n          }}\n          transition={{ duration: 0.3 }}\n          className=\"absolute inset-0\"\n        >\n          <Moon className=\"w-6 h-6 text-blue-400\" />\n        </motion.div>\n      </div>\n    </motion.button>\n  );\n}\n","size_bytes":1373},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/modern-hero.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { TypingEffect } from \"./typing-effect\";\nimport { useTheme } from \"../contexts/theme-context\";\nimport cloudImage from \"@assets/6705b4a36def1cf003c24d10_Property 1=Day, Property 2=Cloud 3_1760332010666.png\";\n\nconst particles = Array.from({ length: 30 }, (_, i) => ({\n  id: i,\n  x: Math.random() * 100,\n  y: Math.random() * 100,\n  size: Math.random() * 4 + 2,\n  delay: Math.random() * 2,\n  duration: Math.random() * 3 + 2,\n}));\n\nexport function ModernHero() {\n  const { theme } = useTheme();\n  const isDayTheme = theme === 'day';\n\n  return (\n    <div className=\"min-h-screen relative overflow-hidden flex items-center justify-center\">\n      {/* Animated particles/stars - only show in night theme */}\n      {!isDayTheme && particles.map((particle) => (\n        <motion.div\n          key={particle.id}\n          className=\"absolute rounded-full bg-yellow-300\"\n          style={{\n            left: `${particle.x}%`,\n            top: `${particle.y}%`,\n            width: `${particle.size}px`,\n            height: `${particle.size}px`,\n          }}\n          initial={{ opacity: 0, scale: 0 }}\n          animate={{ \n            opacity: [0.3, 1, 0.3],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            delay: particle.delay,\n            duration: particle.duration,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        />\n      ))}\n\n      {/* Clouds - hidden on mobile, visible on desktop with slow floating animation */}\n      <motion.img\n        src={cloudImage}\n        alt=\"cloud\"\n        className=\"hidden md:block absolute left-[5%] top-[25%] w-[280px] opacity-80\"\n        initial={{ x: -100, opacity: 0, y: 0 }}\n        animate={{ \n          x: 0, \n          opacity: 0.8,\n          y: [0, -15, 0]\n        }}\n        transition={{ \n          x: { duration: 1.2, ease: \"easeOut\" },\n          opacity: { duration: 1.2, ease: \"easeOut\" },\n          y: { duration: 8, repeat: Infinity, ease: \"easeInOut\" }\n        }}\n      />\n      \n      <motion.img\n        src={cloudImage}\n        alt=\"cloud\"\n        className=\"hidden md:block absolute right-[8%] top-[35%] w-[250px] opacity-70\"\n        initial={{ x: 100, opacity: 0, y: 0 }}\n        animate={{ \n          x: 0, \n          opacity: 0.7,\n          y: [0, -12, 0]\n        }}\n        transition={{ \n          x: { duration: 1.4, ease: \"easeOut\" },\n          opacity: { duration: 1.4, delay: 0.2, ease: \"easeOut\" },\n          y: { duration: 9, delay: 1, repeat: Infinity, ease: \"easeInOut\" }\n        }}\n      />\n      \n      <motion.img\n        src={cloudImage}\n        alt=\"cloud\"\n        className=\"hidden md:block absolute left-[10%] bottom-[20%] w-[220px] opacity-60\"\n        initial={{ x: -80, opacity: 0, y: 0 }}\n        animate={{ \n          x: 0, \n          opacity: 0.6,\n          y: [0, -10, 0]\n        }}\n        transition={{ \n          x: { duration: 1.3, ease: \"easeOut\" },\n          opacity: { duration: 1.3, delay: 0.3, ease: \"easeOut\" },\n          y: { duration: 10, delay: 2, repeat: Infinity, ease: \"easeInOut\" }\n        }}\n      />\n\n\n      <div className=\"relative z-10 text-center px-6 max-w-6xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"mb-8\"\n        >\n          <h2 className=\"text-3xl md:text-4xl font-light mb-6 text-white\">\n            Hello! We are\n          </h2>\n          \n          <div className=\"mb-8\">\n            <TypingEffect />\n          </div>\n\n          <motion.p\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1, duration: 0.8 }}\n            className=\"text-xl md:text-2xl text-pink-300 font-light italic mb-8\"\n          >\n            The music of revolution,\n            <br />\n            We are the solution.\n          </motion.p>\n        </motion.div>\n\n        <motion.p\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.3, duration: 0.8 }}\n          className=\"text-base md:text-lg text-gray-200 max-w-xl mx-auto mb-8\"\n        >\n          Innovative record label celebrating all genres and transforming artists into global superstars.\n        </motion.p>\n\n        <motion.button\n          onClick={() => {\n            const event = new WheelEvent('wheel', { deltaY: 100, bubbles: true, cancelable: true });\n            document.dispatchEvent(event);\n          }}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ \n            opacity: 1, \n            y: [0, -10, 0]\n          }}\n          transition={{ \n            delay: 1.6, \n            duration: 0.6,\n            y: {\n              repeat: Infinity,\n              duration: 2,\n              ease: \"easeInOut\"\n            }\n          }}\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          className=\"bg-white/10 backdrop-blur-2xl text-white px-8 py-3 rounded-full border-2 border-white/30 hover:bg-white/20 transition-all duration-300 flex items-center gap-2 mx-auto shadow-2xl shadow-purple-500/20 z-20\"\n        >\n          Scroll\n          <motion.svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            animate={{ y: [0, 5, 0] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          >\n            <path d=\"M12 5v14M19 12l-7 7-7-7\" />\n          </motion.svg>\n        </motion.button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5605},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/unison-logo.tsx":{"content":"// Unison logo SVG (no background shape)\nexport const UnisonLogoNoShape = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" style={{ display: 'block', maxWidth: '100%', height: 'auto' }} {...props}>\n    <path d=\"M60 24C39.9086 24 24 39.9086 24 60C24 80.0914 39.9086 96 60 96C80.0914 96 96 80.0914 96 60C96 39.9086 80.0914 24 60 24ZM60 88C44.536 88 32 75.464 32 60C32 44.536 44.536 32 60 32C75.464 32 88 44.536 88 60C88 75.464 75.464 88 60 88Z\" fill=\"#1A1A1A\"/>\n    <path d=\"M60 40C51.1634 40 44 47.1634 44 56C44 64.8366 51.1634 72 60 72C68.8366 72 76 64.8366 76 56C76 47.1634 68.8366 40 60 40ZM60 68C54.4772 68 50 63.5228 50 58C50 52.4772 54.4772 48 60 48C65.5228 48 70 52.4772 70 58C70 63.5228 65.5228 68 60 68Z\" fill=\"#1A1A1A\"/>\n  </svg>\n);\n// Official Unison logo SVG from https://unisonmusicapp.com/unison-logo-new3.svg\nexport const OfficialUnisonLogo = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" style={{ display: 'block', maxWidth: '100%', height: 'auto' }} {...props}>\n    <rect width=\"120\" height=\"120\" rx=\"60\" fill=\"#1A1A1A\"/>\n    <path d=\"M60 24C39.9086 24 24 39.9086 24 60C24 80.0914 39.9086 96 60 96C80.0914 96 96 80.0914 96 60C96 39.9086 80.0914 24 60 24ZM60 88C44.536 88 32 75.464 32 60C32 44.536 44.536 32 60 32C75.464 32 88 44.536 88 60C88 75.464 75.464 88 60 88Z\" fill=\"#fff\"/>\n    <path d=\"M60 40C51.1634 40 44 47.1634 44 56C44 64.8366 51.1634 72 60 72C68.8366 72 76 64.8366 76 56C76 47.1634 68.8366 40 60 40ZM60 68C54.4772 68 50 63.5228 50 58C50 52.4772 54.4772 48 60 48C65.5228 48 70 52.4772 70 58C70 63.5228 65.5228 68 60 68Z\" fill=\"#fff\"/>\n  </svg>\n);\n// Unison logo SVG from https://unisonmusicapp.com/ (simplified for use)\n// Unison logo SVG from https://unisonmusicapp.com/unison-logo-new3.svg\n// Simple community illustration SVG\nexport const UnisonLogo = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" style={{ display: 'block', maxWidth: '100%', height: 'auto' }} {...props}>\n    <circle cx=\"60\" cy=\"60\" r=\"60\" fill=\"#F3F4F6\" />\n    <circle cx=\"60\" cy=\"54\" r=\"18\" fill=\"#6366F1\" />\n    <circle cx=\"36\" cy=\"80\" r=\"10\" fill=\"#A5B4FC\" />\n    <circle cx=\"84\" cy=\"80\" r=\"10\" fill=\"#A5B4FC\" />\n    <ellipse cx=\"60\" cy=\"92\" rx=\"32\" ry=\"10\" fill=\"#E0E7FF\" />\n    <circle cx=\"60\" cy=\"54\" r=\"8\" fill=\"#fff\" fillOpacity=\"0.7\" />\n  </svg>\n);\n","size_bytes":2559},"client/src/pages/home-modern.tsx":{"content":"import { ModernHero } from \"@/components/modern-hero\";\nimport { ModernMenu } from \"@/components/modern-menu\";\nimport { ModernAbout } from \"@/components/modern-about\";\nimport { ModernContact } from \"@/components/modern-contact\";\nimport { ModernFooter } from \"@/components/modern-footer\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\n\nexport default function HomeModern() {\n  return (\n    <div className=\"relative min-h-screen\">\n      <ThemeToggle />\n      <ModernMenu />\n\n      <ModernHero />\n\n      <div id=\"about\">\n        <ModernAbout />\n      </div>\n\n      <ModernContact />\n\n      <ModernFooter />\n    </div>\n  );\n}\n","size_bytes":632},"client/src/components/scroll-reveal.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ReactNode } from \"react\";\n\ninterface ScrollRevealProps {\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n  variant?: \"fadeUp\" | \"fadeIn\" | \"slideLeft\" | \"slideRight\" | \"scale\";\n}\n\nconst variants = {\n  fadeUp: {\n    initial: { opacity: 0, y: 60 },\n    animate: { opacity: 1, y: 0 }\n  },\n  fadeIn: {\n    initial: { opacity: 0 },\n    animate: { opacity: 1 }\n  },\n  slideLeft: {\n    initial: { opacity: 0, x: 60 },\n    animate: { opacity: 1, x: 0 }\n  },\n  slideRight: {\n    initial: { opacity: 0, x: -60 },\n    animate: { opacity: 1, x: 0 }\n  },\n  scale: {\n    initial: { opacity: 0, scale: 0.8 },\n    animate: { opacity: 1, scale: 1 }\n  }\n};\n\nexport function ScrollReveal({ \n  children, \n  className = \"\", \n  delay = 0,\n  variant = \"fadeUp\" \n}: ScrollRevealProps) {\n  const selectedVariant = variants[variant];\n  \n  return (\n    <motion.div\n      initial={selectedVariant.initial}\n      whileInView={selectedVariant.animate}\n      viewport={{ once: true, margin: \"-100px\" }}\n      transition={{ \n        duration: 0.9, \n        delay,\n        ease: [0.22, 1, 0.36, 1]\n      }}\n      className={className}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","size_bytes":1214},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/modern-footer.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Instagram, Twitter, Youtube, MessageCircle } from \"lucide-react\";\nimport { SiTiktok, SiDiscord } from \"react-icons/si\";\n\nexport function ModernFooter() {\n  const navigationLinks = [\n    { label: \"Home\", href: \"#\" },\n    { label: \"About us\", href: \"#about\" },\n    { label: \"Team\", href: \"#team\" },\n    { label: \"Contact\", href: \"#contact\" }\n  ];\n\n  const servicesLinks = [\n    { label: \"Music Discovery\", href: \"#\" },\n    { label: \"Artist Development\", href: \"#\" },\n    { label: \"Distribution\", href: \"#\" },\n    { label: \"Partnership\", href: \"#\" }\n  ];\n\n  const socialLinks = [\n    { icon: SiDiscord, label: \"Discord\", href: \"#\" },\n    { icon: SiTiktok, label: \"TikTok\", href: \"#\" },\n    { icon: Instagram, label: \"Instagram\", href: \"#\" },\n    { icon: Twitter, label: \"Twitter\", href: \"#\" },\n    { icon: Youtube, label: \"Youtube\", href: \"#\" },\n    { icon: MessageCircle, label: \"Threads\", href: \"#\" }\n  ];\n\n  return (\n    <footer className=\"relative py-12 md:py-16 px-4 md:px-6 bg-black/90 mt-auto\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"grid md:grid-cols-3 gap-8 md:gap-12 mb-12 md:mb-16\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            className=\"bg-gray-500/20 backdrop-blur-xl rounded-3xl p-6 md:p-8 shadow-2xl border border-gray-400/20\"\n          >\n            <h3 className=\"text-white text-lg md:text-xl mb-4 md:mb-6\">Stay up to date with all things Mate Nation</h3>\n            <p className=\"text-gray-300 text-sm mb-4 md:mb-6\">\n              Join our mailing list to be the first to know about new features and releases.\n            </p>\n            <div className=\"flex\">\n              <input\n                type=\"email\"\n                placeholder=\"info@matenation.org\"\n                className=\"flex-1 bg-white/10 border-2 border-white/30 rounded-l-full px-4 md:px-6 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-pink-500 backdrop-blur-xl text-sm md:text-base\"\n              />\n              <button className=\"bg-pink-500 hover:bg-pink-600 text-white px-4 md:px-8 py-3 rounded-r-full transition-colors shadow-lg text-sm md:text-base whitespace-nowrap\">\n                Sign up\n              </button>\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-gray-500/20 backdrop-blur-xl rounded-3xl p-6 md:p-8 shadow-2xl border border-gray-400/20\"\n          >\n            <div className=\"grid grid-cols-2 gap-6 md:gap-8\">\n              <div>\n                <ul className=\"space-y-3\">\n                  {navigationLinks.map((link, index) => (\n                    <li key={index}>\n                      <a href={link.href} className=\"text-gray-200 hover:text-white transition-colors text-sm\">\n                        • {link.label}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div>\n                <ul className=\"space-y-3\">\n                  {servicesLinks.map((link, index) => (\n                    <li key={index}>\n                      <a href={link.href} className=\"text-gray-200 hover:text-white transition-colors text-sm\">\n                        • {link.label}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.2 }}\n            className=\"bg-gray-500/20 backdrop-blur-xl rounded-3xl p-6 md:p-8 shadow-2xl border border-gray-400/20\"\n          >\n            <h4 className=\"text-white mb-4 md:mb-6 text-base md:text-lg\">Follow us</h4>\n            <div className=\"grid grid-cols-3 gap-3 md:gap-4\">\n              {socialLinks.map((social, index) => (\n                <a\n                  key={index}\n                  href={social.href}\n                  className=\"flex flex-col items-center justify-center bg-gray-600/20 backdrop-blur-xl rounded-2xl p-3 md:p-4 hover:bg-gray-500/30 transition-colors group border border-gray-400/20\"\n                >\n                  <social.icon className=\"w-5 h-5 md:w-6 md:h-6 text-white mb-1 md:mb-2\" />\n                  <span className=\"text-[10px] md:text-xs text-gray-300\">{social.label}</span>\n                </a>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n\n        <div className=\"flex flex-col md:flex-row justify-between items-center gap-4 text-xs md:text-sm text-gray-400 border-t border-white/20 pt-6 md:pt-8\">\n          <span>© Mate Nation, 2025</span>\n          <div className=\"flex flex-wrap justify-center gap-4 md:gap-8\">\n            <a href=\"#\" className=\"hover:text-white transition-colors\">Terms & Conditions</a>\n            <a href=\"#\" className=\"hover:text-white transition-colors\">Privacy Policy</a>\n            <a href=\"#\" className=\"hover:text-white transition-colors\">Media Assets</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5388},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/modern-card.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ReactNode } from \"react\";\n\ninterface ModernCardProps {\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n  gradient?: string;\n}\n\nexport function ModernCard({ children, className = \"\", delay = 0, gradient }: ModernCardProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 30 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true, margin: \"-50px\" }}\n      transition={{ \n        delay, \n        duration: 0.7,\n        ease: [0.22, 1, 0.36, 1]\n      }}\n      whileHover={{ \n        scale: 1.03, \n        y: -8,\n        transition: { \n          duration: 0.3,\n          ease: [0.22, 1, 0.36, 1]\n        }\n      }}\n      className={`bg-gray-500/20 backdrop-blur-xl rounded-3xl p-8 border border-gray-400/20 shadow-2xl hover:shadow-pink-500/20 hover:border-gray-300/30 transition-all duration-300 ${className}`}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","size_bytes":949},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"fade-in\": {\n          \"0%\": { opacity: \"0\", transform: \"translateY(30px)\" },\n          \"100%\": { opacity: \"1\", transform: \"translateY(0)\" }\n        },\n        \"slide-up\": {\n          \"0%\": { opacity: \"0\", transform: \"translateY(60px)\" },\n          \"100%\": { opacity: \"1\", transform: \"translateY(0)\" }\n        },\n        \"scale-in\": {\n          \"0%\": { opacity: \"0\", transform: \"scale(0.9)\" },\n          \"100%\": { opacity: \"1\", transform: \"scale(1)\" }\n        },\n        \"float\": {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-20px)\" }\n        }\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fade-in 1s ease-in-out\",\n        \"slide-up\": \"slide-up 0.8s ease-out\",\n        \"scale-in\": \"scale-in 0.6s ease-out\",\n        \"float\": \"float 6s ease-in-out infinite\"\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3560},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/logo-switch.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport function LogoSwitch() {\n  const [isToggled, setIsToggled] = useState(false);\n\n  return (\n    <motion.div\n      className=\"logo-switch cursor-pointer\"\n      onClick={() => setIsToggled(!isToggled)}\n      whileHover={{ scale: 1.05 }}\n      whileTap={{ scale: 0.95 }}\n    >\n      <motion.h1\n        className=\"text-2xl font-bold\"\n        animate={{ scale: isToggled ? 1.1 : 1 }}\n        transition={{ duration: 0.3 }}\n      >\n        {isToggled ? \"♫\" : \"mate.\"}\n      </motion.h1>\n    </motion.div>\n  );\n}\n","size_bytes":587},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/team-section.tsx":{"content":"import { ScrollReveal } from \"./scroll-reveal\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport avikImage from \"@assets/AVIK_1757912854902.jpeg\";\nimport amritImage from \"@assets/Amrit_1757912855008.jpeg\";\nimport prosperImage from \"@assets/prosper_1757912855043.jpeg\";\nimport abhayImage from \"@assets/Abhay_1757912854967.jpeg\";\nimport ceoImage from \"@assets/ceo_1757912854870.jpeg\";\nimport { AnimatedBackground } from \"./animated-background\";\nimport { MinimalistBackground } from \"./minimalist-background\";\n\ninterface TeamMember {\n  name: string;\n  role: string;\n  description: string;\n  gradient: string;\n  image?: string;\n}\n\nconst teamData = {\n  operatingManager: [\n    {\n      name: \"Alvin\",\n      role: \"Director\",\n      description: \"Experienced leader overseeing daily operations and ensuring organizational efficiency at Mate Nations.\",\n      gradient: \"from-yellow-500 to-orange-500\"\n    }\n  ],\n  leadership: [\n    {\n      name: \"AVIK\",\n      role: \"Founder & EDM Producer\",\n      description: \"Visionary founder driving Mate Nations' mission to revolutionize music discovery and artist development in the electronic music space.\",\n      gradient: \"from-purple-500 to-pink-500\",\n      image: avikImage\n    },\n    {\n      name: \"Alex Mendez\",\n      role: \"Chief Executive Officer\",\n      description: \"Strategic leader orchestrating Mate Nations' growth and ensuring operational excellence across all business verticals.\",\n      gradient: \"from-blue-500 to-cyan-500\",\n      image: ceoImage\n    },\n    {\n      name: \"Amrit\",\n      role: \"Investor & Sponsorship\",\n      description: \"Financial strategist and partnership architect securing resources and strategic alliances for Mate Nations' expansion.\",\n      gradient: \"from-green-500 to-emerald-500\",\n      image: amritImage\n    }\n  ],\n  ar: [\n    {\n      name: \"Abhay\",\n      role: \"A&R Specialist\",\n      description: \"Pop and electronic music specialist identifying next-gen artists.\",\n      gradient: \"from-indigo-500 to-purple-500\",\n      image: abhayImage\n    },\n    {\n      name: \"AVIK\",\n      role: \"A&R Lead\",\n      description: \"Electronic and dance music expert guiding artist development.\",\n      gradient: \"from-purple-500 to-pink-500\",\n      image: avikImage\n    }\n  ],\n  digital: [\n    {\n      name: \"Stefflen\",\n      role: \"Head of Digital Art\",\n      description: \"Creative director leading visual identity and digital artwork creation.\",\n      gradient: \"from-teal-500 to-cyan-500\"\n    }\n  ],\n  video: [\n    {\n      name: \"Soumyadeep Banik\",\n      role: \"Head of Video Editing\",\n      description: \"Video production maestro crafting compelling music visuals and content.\",\n      gradient: \"from-rose-500 to-pink-500\"\n    }\n  ],\n  developers: [\n    {\n      name: \"AVIK\",\n      role: \"Web Developer\",\n      description: \"Full-stack web developer architecting Mate Nations' digital platform and user experience.\",\n      gradient: \"from-purple-500 to-pink-500\",\n      image: avikImage\n    },\n    {\n      name: \"Amrit\",\n      role: \"Web Developer\",\n      description: \"Systems engineer building robust web infrastructure and API services.\",\n      gradient: \"from-green-500 to-emerald-500\",\n      image: amritImage\n    },\n    {\n      name: \"Rendra\",\n      role: \"Web Developer\",\n      description: \"Mobile web developer ensuring seamless cross-platform web experiences.\",\n      gradient: \"from-orange-500 to-red-500\"\n    }\n  ],\n  releaseCoordinator: [\n    {\n      name: \"Peter\",\n      role: \"Release Coordinator\",\n      description: \"Managing album releases, distribution schedules, and coordinating between artists and streaming platforms.\",\n      gradient: \"from-cyan-500 to-blue-500\"\n    }\n  ],\n  strategist: [\n    {\n      name: \"Prajit\",\n      role: \"Strategist\",\n      description: \"Developing market strategies and analyzing music trends to position our artists for maximum success.\",\n      gradient: \"from-violet-500 to-indigo-500\"\n    }\n  ],\n  management: [\n    {\n      name: \"Utsav Poonia\",\n      role: \"Manager\",\n      description: \"Operations manager ensuring seamless execution of projects and maintaining team productivity across all departments.\",\n      gradient: \"from-amber-500 to-orange-500\"\n    }\n  ]\n};\n\nfunction TeamCard({ member, size = \"normal\" }: { member: TeamMember; size?: \"normal\" | \"small\" | \"large\" }) {\n  const sizeClasses = {\n    small: \"w-16 h-16\",\n    normal: \"w-20 h-20\", \n    large: \"w-20 h-20\"\n  };\n\n  const textSizes = {\n    small: { name: \"text-lg\", role: \"text-primary\", desc: \"text-xs\" },\n    normal: { name: \"text-xl\", role: \"text-primary\", desc: \"text-sm\" },\n    large: { name: \"text-xl\", role: \"text-primary\", desc: \"text-sm\" }\n  };\n\n  // Simple circular avatar for members without images\n  const PolygonalAvatar = ({ name, gradient, className }: { name: string; gradient: string; className: string }) => (\n    <div className={`${className} bg-gradient-to-br ${gradient} rounded-full mx-auto mb-4 flex items-center justify-center`}>\n      <span className=\"text-white font-bold text-lg\">\n        {name.split(' ').map(n => n[0]).join('').toUpperCase()}\n      </span>\n    </div>\n  );\n\n  return (\n    <Card className=\"team-card rounded-xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300\" data-testid={`card-team-${member.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n      <CardContent className=\"p-0\">\n        {member.image ? (\n          <div className={`${sizeClasses[size]} mx-auto mb-4 rounded-full overflow-hidden bg-gradient-to-br ${member.gradient}`}>\n            <img \n              src={member.image} \n              alt={member.name}\n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n        ) : (\n          <PolygonalAvatar \n            name={member.name}\n            gradient={member.gradient}\n            className={sizeClasses[size]}\n          />\n        )}\n        <h4 className={`${textSizes[size].name} font-bold mb-2`}>{member.name}</h4>\n        <p className={`${textSizes[size].role} mb-3`}>{member.role}</p>\n        <p className={`${textSizes[size].desc} text-muted-foreground`}>{member.description}</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function TeamSection() {\n  return (\n    <MinimalistBackground className=\"py-20 md:py-32 px-4 md:px-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <ScrollReveal>\n          <h2 className=\"text-4xl md:text-5xl font-light text-center mb-16 md:mb-20\">Our Team</h2>\n          \n          {/* Leadership */}\n          <div className=\"mb-12 md:mb-16\">\n            <h3 className=\"text-xl md:text-2xl font-semibold mb-6 md:mb-8 text-center\">Leadership</h3>\n            <div className=\"grid sm:grid-cols-2 md:grid-cols-3 gap-6 md:gap-8\">\n              {teamData.leadership.map((member) => (\n                <TeamCard key={member.name} member={member} size=\"large\" />\n              ))}\n            </div>\n          </div>\n\n          {/* Operating Manager */}\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-semibold mb-8 text-center\">Operating Manager</h3>\n            <div className=\"flex justify-center\">\n              <div className=\"w-full max-w-2xl\">\n                {teamData.operatingManager.map((member) => (\n                  <TeamCard key={member.name} member={member} size=\"normal\" />\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* A&R Team */}\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-semibold mb-8 text-center\">A&R Team</h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 max-w-2xl mx-auto\">\n              {teamData.ar.map((member, index) => (\n                <TeamCard key={`${member.name}-${index}`} member={member} size=\"normal\" />\n              ))}\n            </div>\n          </div>\n\n          {/* Creative Teams */}\n          <div className=\"grid md:grid-cols-2 gap-12 mb-16\">\n            {/* Digital Artist Team */}\n            <div>\n              <h3 className=\"text-2xl font-semibold mb-8 text-center\">Digital Artist Team</h3>\n              <div className=\"grid md:grid-cols-1 gap-8 max-w-2xl mx-auto\">\n                {teamData.digital.map((member) => (\n                  <TeamCard key={member.name} member={member} size=\"normal\" />\n                ))}\n              </div>\n            </div>\n\n            {/* Video Editing Team */}\n            <div>\n              <h3 className=\"text-2xl font-semibold mb-8 text-center\">Video Editing Team</h3>\n              <div className=\"grid md:grid-cols-1 gap-8 max-w-2xl mx-auto\">\n                {teamData.video.map((member) => (\n                  <TeamCard key={member.name} member={member} size=\"normal\" />\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Developers */}\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-semibold mb-8 text-center\">Development Team</h3>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {teamData.developers.map((member, index) => (\n                <TeamCard key={`${member.name}-dev-${index}`} member={member} size=\"small\" />\n              ))}\n            </div>\n          </div>\n\n          {/* Release Coordinator */}\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-semibold mb-8 text-center\">Release Coordination</h3>\n            <div className=\"grid md:grid-cols-1 gap-8 max-w-2xl mx-auto\">\n              {teamData.releaseCoordinator.map((member) => (\n                <TeamCard key={member.name} member={member} size=\"normal\" />\n              ))}\n            </div>\n          </div>\n\n          {/* Strategist */}\n          <div className=\"mb-16\">\n            <h3 className=\"text-2xl font-semibold mb-8 text-center\">Strategist</h3>\n            <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n              {teamData.strategist.map((member) => (\n                <TeamCard key={member.name} member={member} size=\"normal\" />\n              ))}\n            </div>\n          </div>\n\n          {/* Management */}\n          <div>\n            <h3 className=\"text-2xl font-semibold mb-8 text-center\">Management</h3>\n            <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n              {teamData.management.map((member) => (\n                <TeamCard key={member.name} member={member} size=\"normal\" />\n              ))}\n            </div>\n          </div>\n        </ScrollReveal>\n      </div>\n  </MinimalistBackground>\n  );\n}\n","size_bytes":10433},"client/src/components/modern-partners.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ModernCard } from \"./modern-card\";\n\nexport function ModernPartners() {\n  return (\n    <section className=\"py-20 px-6 relative z-10\">\n      <div className=\"max-w-6xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-12\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">Our Partner Community</h2>\n        </motion.div>\n\n        <ModernCard>\n          <motion.div \n            className=\"text-center mb-8\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.5 }}\n          >\n            <h3 className=\"text-3xl font-bold text-white mb-4\">Unison Music App</h3>\n            <p className=\"text-xl text-gray-300 mb-8\">Make music together. Let your unfinished tracks grow.</p>\n          </motion.div>\n          \n          <div className=\"grid md:grid-cols-2 gap-8 items-center\">\n            <motion.div \n              className=\"text-left\"\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <h4 className=\"text-2xl font-semibold text-white mb-4\">Ungatekeep Collaboration</h4>\n              <ul className=\"space-y-3 text-gray-300\">\n                {[\n                  'Collaborate live with musicians worldwide',\n                  'Seamless stitching and stem creation',\n                  'Inspire and connect with creative community',\n                  'Automate stems with a single click'\n                ].map((item, i) => (\n                  <motion.li\n                    key={i}\n                    initial={{ opacity: 0, x: -20 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    viewport={{ once: true }}\n                    transition={{ delay: i * 0.1, duration: 0.5 }}\n                  >\n                    • {item}\n                  </motion.li>\n                ))}\n              </ul>\n            </motion.div>\n            <motion.div \n              className=\"flex justify-center items-center\"\n              initial={{ opacity: 0, scale: 0.8, rotate: -5 }}\n              whileInView={{ opacity: 1, scale: 1, rotate: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6, type: \"spring\" }}\n            >\n              <div className=\"rounded-2xl overflow-hidden w-full bg-gradient-to-br from-pink-500 via-purple-500 to-blue-500 p-1 shadow-2xl hover:shadow-pink-500/50 transition-shadow duration-300\">\n                <div className=\"bg-gray-900/95 rounded-xl p-8 flex flex-col items-center justify-center\" style={{ aspectRatio: '4 / 3', maxWidth: 420 }}>\n                  {/* Illustration: Artists Collaborating & Listeners Enjoying */}\n                  <svg className=\"w-48 h-32 mb-4\" viewBox=\"0 0 200 130\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    {/* Artist 1 with headphones */}\n                    <motion.g\n                      initial={{ x: -10, opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      transition={{ delay: 0.2, duration: 0.5 }}\n                    >\n                      <circle cx=\"40\" cy=\"40\" r=\"18\" fill=\"#EC4899\"/>\n                      <rect x=\"28\" y=\"32\" width=\"4\" height=\"12\" rx=\"2\" fill=\"#F472B6\"/>\n                      <rect x=\"48\" y=\"32\" width=\"4\" height=\"12\" rx=\"2\" fill=\"#F472B6\"/>\n                      <path d=\"M28 35 Q20 35 20 40 Q20 45 28 45\" stroke=\"#F472B6\" strokeWidth=\"3\" fill=\"none\"/>\n                      <path d=\"M52 35 Q60 35 60 40 Q60 45 52 45\" stroke=\"#F472B6\" strokeWidth=\"3\" fill=\"none\"/>\n                    </motion.g>\n                    \n                    {/* Artist 2 with headphones */}\n                    <motion.g\n                      initial={{ x: 10, opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      transition={{ delay: 0.4, duration: 0.5 }}\n                    >\n                      <circle cx=\"100\" cy=\"40\" r=\"18\" fill=\"#A855F7\"/>\n                      <rect x=\"88\" y=\"32\" width=\"4\" height=\"12\" rx=\"2\" fill=\"#C084FC\"/>\n                      <rect x=\"108\" y=\"32\" width=\"4\" height=\"12\" rx=\"2\" fill=\"#C084FC\"/>\n                      <path d=\"M88 35 Q80 35 80 40 Q80 45 88 45\" stroke=\"#C084FC\" strokeWidth=\"3\" fill=\"none\"/>\n                      <path d=\"M112 35 Q120 35 120 40 Q120 45 112 45\" stroke=\"#C084FC\" strokeWidth=\"3\" fill=\"none\"/>\n                    </motion.g>\n                    \n                    {/* Artist 3 with headphones */}\n                    <motion.g\n                      initial={{ x: -10, opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      transition={{ delay: 0.6, duration: 0.5 }}\n                    >\n                      <circle cx=\"160\" cy=\"40\" r=\"18\" fill=\"#3B82F6\"/>\n                      <rect x=\"148\" y=\"32\" width=\"4\" height=\"12\" rx=\"2\" fill=\"#60A5FA\"/>\n                      <rect x=\"168\" y=\"32\" width=\"4\" height=\"12\" rx=\"2\" fill=\"#60A5FA\"/>\n                      <path d=\"M148 35 Q140 35 140 40 Q140 45 148 45\" stroke=\"#60A5FA\" strokeWidth=\"3\" fill=\"none\"/>\n                      <path d=\"M172 35 Q180 35 180 40 Q180 45 172 45\" stroke=\"#60A5FA\" strokeWidth=\"3\" fill=\"none\"/>\n                    </motion.g>\n                    \n                    {/* Connecting lines showing collaboration */}\n                    <motion.path\n                      d=\"M60 45 L80 45\"\n                      stroke=\"#F472B6\"\n                      strokeWidth=\"2\"\n                      strokeDasharray=\"4 4\"\n                      initial={{ pathLength: 0 }}\n                      animate={{ pathLength: 1 }}\n                      transition={{ delay: 0.8, duration: 0.6 }}\n                    />\n                    <motion.path\n                      d=\"M120 45 L140 45\"\n                      stroke=\"#C084FC\"\n                      strokeWidth=\"2\"\n                      strokeDasharray=\"4 4\"\n                      initial={{ pathLength: 0 }}\n                      animate={{ pathLength: 1 }}\n                      transition={{ delay: 1, duration: 0.6 }}\n                    />\n                    \n                    {/* Music notes floating */}\n                    <motion.g\n                      animate={{ y: [0, -8, 0] }}\n                      transition={{ duration: 2, repeat: Infinity, ease: \"easeInOut\" }}\n                    >\n                      <circle cx=\"70\" cy=\"70\" r=\"4\" fill=\"#EC4899\"/>\n                      <rect x=\"73\" y=\"56\" width=\"2\" height=\"14\" fill=\"#EC4899\"/>\n                    </motion.g>\n                    <motion.g\n                      animate={{ y: [0, -10, 0] }}\n                      transition={{ duration: 2.5, repeat: Infinity, ease: \"easeInOut\", delay: 0.5 }}\n                    >\n                      <circle cx=\"130\" cy=\"75\" r=\"4\" fill=\"#A855F7\"/>\n                      <rect x=\"133\" y=\"61\" width=\"2\" height=\"14\" fill=\"#A855F7\"/>\n                    </motion.g>\n                    \n                    {/* Listener with headphones */}\n                    <motion.g\n                      initial={{ scale: 0, opacity: 0 }}\n                      animate={{ scale: 1, opacity: 1 }}\n                      transition={{ delay: 1.2, duration: 0.5 }}\n                    >\n                      <circle cx=\"100\" cy=\"100\" r=\"20\" fill=\"#10B981\"/>\n                      <rect x=\"86\" y=\"92\" width=\"5\" height=\"14\" rx=\"2\" fill=\"#34D399\"/>\n                      <rect x=\"109\" y=\"92\" width=\"5\" height=\"14\" rx=\"2\" fill=\"#34D399\"/>\n                      <path d=\"M86 95 Q76 95 76 100 Q76 105 86 105\" stroke=\"#34D399\" strokeWidth=\"3\" fill=\"none\"/>\n                      <path d=\"M114 95 Q124 95 124 100 Q124 105 114 105\" stroke=\"#34D399\" strokeWidth=\"3\" fill=\"none\"/>\n                    </motion.g>\n                  </svg>\n                  \n                  <h5 className=\"text-3xl font-bold text-white mb-3\">Unison Music</h5>\n                  <p className=\"text-lg text-gray-300 mb-4\">Collaborate & Create</p>\n                  <div className=\"flex gap-3 mt-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-pink-500\"></div>\n                    <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n                    <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n          \n          <motion.div \n            className=\"mt-8 text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.3, duration: 0.5 }}\n          >\n            <motion.a \n              href=\"https://unisonmusicapp.com/\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"inline-block px-8 py-3 bg-pink-500 hover:bg-pink-600 text-white rounded-full font-medium transition-colors\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              Visit Unison Music App\n            </motion.a>\n          </motion.div>\n        </ModernCard>\n      </div>\n    </section>\n  );\n}\n","size_bytes":9428},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=VT323&family=Press+Start+2P&family=Quicksand:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root[data-theme=\"night\"] {\n  --background: hsl(250, 50%, 8%);\n  --foreground: hsl(220, 80%, 85%);\n  --card: hsl(250, 45%, 12%);\n  --card-foreground: hsl(220, 80%, 85%);\n  --popover: hsl(250, 45%, 12%);\n  --popover-foreground: hsl(220, 80%, 85%);\n  --primary: hsl(260, 85%, 65%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(250, 40%, 18%);\n  --secondary-foreground: hsl(220, 80%, 85%);\n  --muted: hsl(250, 35%, 22%);\n  --muted-foreground: hsl(220, 40%, 65%);\n  --accent: hsl(210, 85%, 60%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(250, 40%, 28%);\n  --input: hsl(250, 40%, 20%);\n  --ring: hsl(260, 85%, 65%);\n  --radius: 2rem;\n  --font-sans: 'Inter', sans-serif;\n  --font-retro: 'VT323', monospace;\n  --font-pixel: 'Press Start 2P', cursive;\n}\n\n:root[data-theme=\"day\"] {\n  --background: hsl(220, 100%, 97%);\n  --foreground: hsl(250, 60%, 25%);\n  --card: hsl(220, 100%, 99%);\n  --card-foreground: hsl(250, 60%, 25%);\n  --popover: hsl(220, 100%, 99%);\n  --popover-foreground: hsl(250, 60%, 25%);\n  --primary: hsl(260, 85%, 60%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(220, 80%, 92%);\n  --secondary-foreground: hsl(250, 60%, 25%);\n  --muted: hsl(220, 60%, 88%);\n  --muted-foreground: hsl(250, 35%, 50%);\n  --accent: hsl(210, 100%, 55%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(220, 50%, 85%);\n  --input: hsl(220, 80%, 94%);\n  --ring: hsl(260, 85%, 60%);\n  --radius: 2rem;\n  --font-sans: 'Inter', sans-serif;\n  --font-retro: 'VT323', monospace;\n  --font-pixel: 'Press Start 2P', cursive;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  html {\n    scroll-behavior: smooth;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    overflow-x: hidden;\n    transition: background-color 0.3s ease, color 0.3s ease;\n  }\n\n  [data-theme=\"night\"] body {\n    background: linear-gradient(180deg, #1a1d3d 0%, #0a0b1a 100%);\n    background-attachment: fixed;\n    color: hsl(180, 100%, 90%);\n    position: relative;\n  }\n\n  [data-theme=\"night\"] body::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: \n      linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),\n      linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);\n    background-size: 50px 50px;\n    pointer-events: none;\n    z-index: 0;\n  }\n\n  [data-theme=\"day\"] body {\n    background: linear-gradient(180deg, #5865f2 0%, #4752c4 100%);\n    background-attachment: fixed;\n    color: hsl(0, 0%, 100%);\n    position: relative;\n  }\n\n  [data-theme=\"day\"] body::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: \n      linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),\n      linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);\n    background-size: 50px 50px;\n    pointer-events: none;\n    z-index: 0;\n  }\n}\n\n@layer utilities {\n  .retro-text {\n    font-family: var(--font-retro);\n    text-shadow: 0 0 10px currentColor;\n  }\n\n  .pixel-text {\n    font-family: var(--font-pixel);\n    image-rendering: pixelated;\n  }\n\n  .crt-effect {\n    position: relative;\n  }\n\n  .crt-effect::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      transparent 50%, \n      rgba(0, 0, 0, 0.1) 50%\n    );\n    background-size: 100% 4px;\n    pointer-events: none;\n    z-index: 1;\n  }\n\n  [data-theme=\"night\"] .grain-texture {\n    background-image: \n      radial-gradient(circle at 1px 1px, rgba(180, 255, 255, 0.1) 1px, transparent 0);\n    background-size: 20px 20px;\n    pointer-events: none;\n  }\n\n  [data-theme=\"day\"] .grain-texture {\n    background-image: \n      radial-gradient(circle at 1px 1px, rgba(100, 50, 150, 0.08) 1px, transparent 0);\n    background-size: 20px 20px;\n    pointer-events: none;\n  }\n\n  .retro-glow {\n    box-shadow: 0 0 20px currentColor, inset 0 0 20px rgba(255, 255, 255, 0.1);\n  }\n\n  .bubble-glow {\n    box-shadow: \n      0 0 30px rgba(139, 92, 246, 0.3),\n      0 0 60px rgba(59, 130, 246, 0.2),\n      inset 0 0 30px rgba(255, 255, 255, 0.1);\n  }\n\n  .bubble {\n    border-radius: 9999px;\n  }\n\n  .musical-wave {\n    background: repeating-linear-gradient(\n      90deg,\n      transparent,\n      transparent 10px,\n      currentColor 10px,\n      currentColor 11px\n    );\n    opacity: 0.1;\n  }\n\n  .vinyl-spin {\n    animation: spin 3s linear infinite;\n  }\n\n  .note-float {\n    animation: noteFloat 4s ease-in-out infinite;\n  }\n\n  @keyframes spin {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n\n  @keyframes noteFloat {\n    0%, 100% { \n      transform: translateY(0px) translateX(0px) rotate(0deg);\n      opacity: 0.6;\n    }\n    25% {\n      transform: translateY(-20px) translateX(5px) rotate(5deg);\n      opacity: 1;\n    }\n    75% {\n      transform: translateY(-10px) translateX(-5px) rotate(-5deg);\n      opacity: 0.8;\n    }\n  }\n\n  .hexagon-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n\n  .smooth-scroll {\n    scroll-behavior: smooth;\n  }\n\n  @keyframes scanline {\n    0% { transform: translateY(-100%); }\n    100% { transform: translateY(100vh); }\n  }\n\n  .scanline {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background: linear-gradient(transparent, rgba(255, 255, 255, 0.3), transparent);\n    animation: scanline 8s linear infinite;\n    pointer-events: none;\n    z-index: 999;\n  }\n}\n","size_bytes":5982},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/about-section.tsx":{"content":"import { ScrollReveal } from \"./scroll-reveal\";\nimport { AnimatedBackground } from \"./animated-background\";\n\nexport function AboutSection() {\n  return (\n    <div className=\"relative min-h-screen w-full py-20 md:py-32 px-4 md:px-6\">\n      <div className=\"relative z-10\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl lg:text-6xl font-light mb-12\" style={{ letterSpacing: \"-1px\" }}>\n              About Mate Nations\n            </h2>\n            <div className=\"text-base md:text-lg lg:text-xl leading-relaxed text-gray-300 space-y-6\">\n              <p>\n                <strong>Mate Nations</strong> is an innovative record label revolutionizing the music industry. We embrace and celebrate all music genres, welcoming artists from every musical background and style.\n              </p>\n              <p>\n                As a full-service record label, we provide comprehensive artist development, professional recording services, global distribution, and strategic marketing campaigns. Our artists benefit from industry expertise, creative support, and direct access to major streaming platforms and media outlets.\n              </p>\n              <p>\n                At Mate Nations, we transform talented artists into global superstars through innovative music production, strategic brand development, and worldwide distribution networks.\n              </p>\n              <p>\n                Founded on the principle that exceptional music knows no boundaries, we combine state-of-the-art technology with traditional artistry to create unforgettable sonic experiences. Our team of industry veterans, creative visionaries, and technical experts work collaboratively to nurture raw talent from studio to stage. With cutting-edge recording facilities, strategic partnerships with global streaming platforms, and a deep commitment to artistic integrity, we're not just launching careers—we're building legacies. Whether you're an emerging artist with a groundbreaking sound or an established performer ready to evolve, Mate Nations provides the platform, expertise, and support to make your musical dreams a reality.\n              </p>\n              \n              {/* Additional info visible only on desktop */}\n              <div className=\"hidden md:block mt-8 pt-8 border-t border-gray-700\">\n                <h3 className=\"text-2xl md:text-3xl font-semibold mb-6 text-pink-400\">\n                  What Sets Us Apart\n                </h3>\n                <div className=\"grid md:grid-cols-2 gap-6 text-left\">\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-xl font-medium text-blue-300\">Industry Expertise</h4>\n                    <p className=\"text-gray-400\">\n                      Our team brings decades of combined experience from major labels, indie success stories, and cutting-edge music technology ventures. We understand both the creative and business sides of the industry.\n                    </p>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-xl font-medium text-purple-300\">Global Network</h4>\n                    <p className=\"text-gray-400\">\n                      With partnerships spanning across continents, we ensure your music reaches audiences worldwide. From streaming platforms to radio stations, we have the connections that matter.\n                    </p>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-xl font-medium text-pink-300\">Artist-First Philosophy</h4>\n                    <p className=\"text-gray-400\">\n                      We believe in empowering artists, not controlling them. Transparent contracts, fair royalty splits, and creative freedom are at the core of every partnership we forge.\n                    </p>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-xl font-medium text-cyan-300\">Innovation & Technology</h4>\n                    <p className=\"text-gray-400\">\n                      Leveraging AI-powered analytics, blockchain distribution, and immersive experiences, we're pioneering the future of music while respecting its timeless essence.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ScrollReveal>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4492},"client/src/components/modern-artists.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ModernCard } from \"./modern-card\";\nimport { Music, Headphones, Mic, Guitar, Drum, Piano } from \"lucide-react\";\n\nconst artistData = [\n  { name: 'The Synth Wave', genre: 'Electronic', icon: Piano, color: 'text-purple-400' },\n  { name: 'Bass Revolution', genre: 'Hip Hop', icon: Drum, color: 'text-cyan-400' },\n  { name: 'Guitar Heroes', genre: 'Rock', icon: Guitar, color: 'text-pink-400' },\n  { name: 'Vocal Dreams', genre: 'Pop', icon: Mic, color: 'text-yellow-400' },\n  { name: 'Beat Masters', genre: 'EDM', icon: Headphones, color: 'text-green-400' },\n  { name: 'Sound Architects', genre: 'Experimental', icon: Music, color: 'text-orange-400' },\n  { name: 'Rhythm Collective', genre: 'Jazz', icon: Piano, color: 'text-blue-400' },\n  { name: 'Digital Souls', genre: 'Future Bass', icon: Music, color: 'text-indigo-400' },\n  { name: 'Vinyl Veterans', genre: 'Classic', icon: Headphones, color: 'text-red-400' },\n];\n\nexport function ModernArtists() {\n  return (\n    <section className=\"py-20 px-6 relative z-10\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">Our Artists</h2>\n          <p className=\"text-gray-300 text-lg\">\n            Discover the sound of the future\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4 md:gap-6 mb-12\">\n          {artistData.map((artist, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, scale: 0.9 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              viewport={{ once: true }}\n              transition={{ delay: index * 0.05 }}\n              whileHover={{ scale: 1.05 }}\n              className=\"bg-white/10 backdrop-blur-md rounded-3xl p-6 border border-white/20 flex flex-col items-center justify-center cursor-pointer group hover:bg-white/15 transition-all\"\n            >\n              <artist.icon className={`w-12 h-12 mb-3 ${artist.color}`} />\n              <div className=\"text-lg font-medium text-white mb-1\">\n                {artist.name}\n              </div>\n              <div className=\"text-sm text-gray-400\">\n                {artist.genre}\n              </div>\n              <div className=\"absolute top-2 right-2 w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center\"\n        >\n          <a\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLSfxRvor4d6Z53P-3PQBWBzs5YHwicH9F0qzKenRSUBCAGgsVQ/viewform?usp=header\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-block px-8 py-4 bg-pink-500 hover:bg-pink-600 text-white rounded-full font-medium transition-all\"\n          >\n            Submit Your Demo\n          </a>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3249},"wrangler.toml":{"content":"name = \"matenations\"\ntype = \"javascript\"\naccount_id = \"YOUR_ACCOUNT_ID\"\nworkers_dev = true\nroute = \"\"\nzone_id = \"\"\n\n[site]\nbucket = \"client/dist\"\nentry-point = \".\"\n","size_bytes":164},"client/src/components/retro-hero.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useTheme } from '@/contexts/theme-context';\nimport { Music2, Disc3, Radio } from 'lucide-react';\n\nexport function RetroHero() {\n  const { theme } = useTheme();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center relative overflow-hidden crt-effect\">\n      <div className=\"scanline\" />\n      \n      <div className=\"musical-wave absolute inset-0\" />\n\n      <div className=\"absolute inset-0 flex items-center justify-center opacity-10 pointer-events-none\">\n        <motion.div\n          animate={{ rotate: 360 }}\n          transition={{ duration: 20, repeat: Infinity, ease: \"linear\" }}\n          className=\"w-96 h-96 rounded-full border-8 border-primary\"\n        >\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-32 h-32 rounded-full bg-primary\" />\n          </div>\n        </motion.div>\n      </div>\n\n      <div className=\"relative z-10 text-center px-6 max-w-6xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 1 }}\n          className=\"mb-8\"\n        >\n          <div className=\"retro-text text-6xl md:text-8xl lg:text-9xl text-primary mb-4\">\n            MATE NATIONS\n          </div>\n          <div className=\"flex items-center justify-center gap-4 mb-8\">\n            <motion.div\n              animate={{ scale: [1, 1.2, 1] }}\n              transition={{ duration: 2, repeat: Infinity }}\n            >\n              <Music2 className=\"w-8 h-8 text-accent\" />\n            </motion.div>\n            <motion.div\n              animate={{ rotate: 360 }}\n              transition={{ duration: 3, repeat: Infinity, ease: \"linear\" }}\n            >\n              <Disc3 className=\"w-8 h-8 text-primary\" />\n            </motion.div>\n            <motion.div\n              animate={{ scale: [1, 1.2, 1] }}\n              transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}\n            >\n              <Radio className=\"w-8 h-8 text-accent\" />\n            </motion.div>\n          </div>\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.5, duration: 1 }}\n          className=\"space-y-6\"\n        >\n          <p className=\"retro-text text-2xl md:text-4xl text-foreground\">\n            Welcome to Mate Nations\n          </p>\n          <p className=\"text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto\">\n            We are a team of music revolutionaries who believe in the power of collaborative creation and emergent sound. We believe that music can be a source of good, and that unique beats {'>'} mainstream.\n          </p>\n\n          <motion.button\n            onClick={() => window.scrollTo({ top: window.innerHeight, behavior: 'smooth' })}\n            className=\"mt-8 px-8 py-4 bg-primary text-primary-foreground rounded-full retro-text text-xl hover:bg-accent hover:text-accent-foreground transition-all duration-300 bubble-glow\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            [ ENTER ] ↓\n          </motion.button>\n        </motion.div>\n\n        <motion.div\n          className=\"absolute bottom-10 left-1/2 transform -translate-x-1/2\"\n          animate={{ y: [0, 10, 0] }}\n          transition={{ duration: 2, repeat: Infinity }}\n        >\n          <div className=\"retro-text text-xs text-muted-foreground\">\n            SCROLL ↓\n          </div>\n        </motion.div>\n      </div>\n\n      <div className=\"absolute top-0 left-0 p-6 retro-text text-xs text-muted-foreground\">\n        <div>C:\\\\MUSIC\\\\ {'>'}  MATE_NATIONS.EXE</div>\n        <div className=\"mt-1\">SYSTEM: {theme.toUpperCase()}_MODE</div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3828},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = insertContactSchema.parse(req.body);\n      \n      // Store the contact submission\n      const submission = await storage.createContactSubmission(validatedData);\n      \n      // Send email (in a real app, you'd use nodemailer or similar)\n      // For now, we'll just log it and return success\n      console.log(`New contact submission from ${validatedData.email}:`, validatedData);\n      \n      res.json({ \n        success: true, \n        message: \"Thank you for your message! We'll get back to you soon.\",\n        id: submission.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Invalid form data\", \n          errors: error.errors \n        });\n      } else {\n        console.error(\"Contact form error:\", error);\n        res.status(500).json({ \n          success: false, \n          message: \"Failed to send message. Please try again.\" \n        });\n      }\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":1439},"client/src/components/modern-menu.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Menu, X } from \"lucide-react\";\n\nexport function ModernMenu() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const menuItems = [\n    { label: \"Home\", href: \"#\" },\n    { label: \"About\", href: \"#about\" },\n    { label: \"Team\", href: \"#team\" },\n    { label: \"Contact\", href: \"#contact\" }\n  ];\n\n  return (\n    <>\n      <motion.button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"fixed top-6 left-6 z-50 bg-white/10 backdrop-blur-xl text-white px-6 py-3 rounded-full border border-white/20 hover:bg-white/20 transition-all flex items-center gap-2 shadow-lg shadow-black/20\"\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        {isOpen ? <X className=\"w-5 h-5\" /> : <Menu className=\"w-5 h-5\" />}\n        <span>Menu</span>\n      </motion.button>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-md z-40\"\n            onClick={() => setIsOpen(false)}\n          >\n            <motion.div\n              initial={{ x: -300, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              exit={{ x: -300, opacity: 0 }}\n              transition={{ type: \"spring\", damping: 20 }}\n              className=\"absolute left-0 top-0 h-full w-80 bg-[#1a1d3d]/95 backdrop-blur-2xl border-r border-white/10 p-8 shadow-2xl\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"mt-20\">\n                <nav className=\"space-y-4\">\n                  {menuItems.map((item, index) => (\n                    <motion.a\n                      key={index}\n                      href={item.href}\n                      onClick={() => setIsOpen(false)}\n                      initial={{ x: -20, opacity: 0 }}\n                      animate={{ x: 0, opacity: 1 }}\n                      transition={{ delay: index * 0.1 }}\n                      className=\"block text-2xl text-white hover:text-pink-400 transition-colors py-2\"\n                    >\n                      • {item.label}\n                    </motion.a>\n                  ))}\n                </nav>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}\n","size_bytes":2440},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/cloud-decoration.tsx":{"content":"import { motion } from \"framer-motion\";\n\ninterface CloudDecorationProps {\n  className?: string;\n  delay?: number;\n}\n\nexport function CloudDecoration({ className = \"\", delay = 0 }: CloudDecorationProps) {\n  return (\n    <motion.img\n      src=\"/attached_assets/6705b32dbbf4d28a3fe1d971_Property 1=Night, Property 2=Cloud 2_1760197252112.png\"\n      alt=\"\"\n      className={`pointer-events-none ${className}`}\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: [0, -10, 0] }}\n      transition={{\n        opacity: { delay, duration: 0.8 },\n        y: { delay: delay + 0.5, duration: 4, repeat: Infinity, ease: \"easeInOut\" }\n      }}\n    />\n  );\n}\n\nexport function CloudDecoration2({ className = \"\", delay = 0 }: CloudDecorationProps) {\n  return (\n    <motion.img\n      src=\"/attached_assets/6705b4a36def1cf003c24d10_Property 1=Day, Property 2=Cloud 3_1760197252143.png\"\n      alt=\"\"\n      className={`pointer-events-none ${className}`}\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: [0, -15, 0] }}\n      transition={{\n        opacity: { delay, duration: 0.8 },\n        y: { delay: delay + 0.5, duration: 5, repeat: Infinity, ease: \"easeInOut\" }\n      }}\n    />\n  );\n}\n","size_bytes":1205},"client/src/components/retro-menu.tsx":{"content":"import { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Menu, X, Music, Users, Mail, Info } from 'lucide-react';\nimport { useTheme } from '@/contexts/theme-context';\n\nexport function RetroMenu() {\n  const [isOpen, setIsOpen] = useState(false);\n  const { theme } = useTheme();\n\n  const menuItems = [\n    { label: 'Home', href: '#', icon: Music, desc: 'where the beat drops' },\n    { label: 'About', href: '#about', icon: Info, desc: 'learn who we are' },\n    { label: 'Team', href: '#team', icon: Users, desc: 'meet the sound makers' },\n    { label: 'Contact', href: '#contact', icon: Mail, desc: 'drop us a line' },\n  ];\n\n  return (\n    <>\n      <motion.button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"fixed top-6 right-6 z-50 p-3 rounded-full bg-card border-2 border-primary hover:bg-accent transition-all duration-300 bubble-glow\"\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        aria-label=\"Toggle menu\"\n      >\n        {isOpen ? (\n          <X className=\"w-6 h-6 text-primary\" />\n        ) : (\n          <Menu className=\"w-6 h-6 text-primary\" />\n        )}\n      </motion.button>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-40\"\n            onClick={() => setIsOpen(false)}\n          >\n            <motion.div\n              initial={{ x: '100%' }}\n              animate={{ x: 0 }}\n              exit={{ x: '100%' }}\n              transition={{ type: 'spring', damping: 25, stiffness: 200 }}\n              className=\"absolute right-0 top-0 bottom-0 w-full max-w-md bg-card border-l-4 border-primary p-8 overflow-y-auto rounded-l-3xl\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"retro-text text-primary text-4xl mb-8 mt-16\">\n                MENU\n              </div>\n\n              <div className=\"space-y-4\">\n                {menuItems.map((item, index) => (\n                  <motion.a\n                    key={item.label}\n                    href={item.href}\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    onClick={() => setIsOpen(false)}\n                    className=\"block group\"\n                  >\n                    <div className=\"p-4 bg-secondary border-2 border-border hover:border-primary transition-all duration-300 rounded-3xl bubble-glow\">\n                      <div className=\"flex items-center gap-4\">\n                        <item.icon className=\"w-6 h-6 text-primary\" />\n                        <div className=\"flex-1\">\n                          <div className=\"retro-text text-xl text-foreground group-hover:text-primary transition-colors\">\n                            {item.label}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            &gt; {item.desc}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.a>\n                ))}\n              </div>\n\n              <div className=\"mt-12 p-4 border-2 border-primary rounded-lg\">\n                <div className=\"retro-text text-sm text-primary mb-2\">\n                  SOUND SYSTEM\n                </div>\n                <div className=\"text-xs text-muted-foreground\">\n                  © 2024 Mate Nations, Inc.\n                  <br />\n                  All beats reserved\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}\n","size_bytes":3846},"client/src/components/artist-showcase.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Music, Headphones, Mic, Guitar, Drum, Piano } from 'lucide-react';\n\nconst artistData = [\n  { name: 'The Synth Wave', genre: 'Electronic', icon: Piano, color: 'text-purple-400' },\n  { name: 'Bass Revolution', genre: 'Hip Hop', icon: Drum, color: 'text-cyan-400' },\n  { name: 'Guitar Heroes', genre: 'Rock', icon: Guitar, color: 'text-pink-400' },\n  { name: 'Vocal Dreams', genre: 'Pop', icon: Mic, color: 'text-yellow-400' },\n  { name: 'Beat Masters', genre: 'EDM', icon: Headphones, color: 'text-green-400' },\n  { name: 'Sound Architects', genre: 'Experimental', icon: Music, color: 'text-orange-400' },\n  { name: 'Rhythm Collective', genre: 'Jazz', icon: Piano, color: 'text-blue-400' },\n  { name: 'Digital Souls', genre: 'Future Bass', icon: Music, color: 'text-indigo-400' },\n  { name: 'Vinyl Veterans', genre: 'Classic', icon: Headphones, color: 'text-red-400' },\n];\n\nexport function ArtistShowcase() {\n  return (\n    <section className=\"py-20 px-6 relative overflow-hidden\">\n      <div className=\"absolute inset-0 musical-wave opacity-5\" />\n      \n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n        className=\"max-w-7xl mx-auto\"\n      >\n        <div className=\"text-center mb-16\">\n          <div className=\"retro-text text-5xl md:text-6xl text-primary mb-4\">\n            OUR ARTISTS\n          </div>\n          <p className=\"text-lg text-muted-foreground\">\n            Discover the sound of the future\n          </p>\n        </div>\n\n        <div className=\"hexagon-grid mb-12\">\n          {artistData.map((artist, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, scale: 0.8 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              viewport={{ once: true }}\n              transition={{ delay: index * 0.1, duration: 0.5 }}\n              whileHover={{ scale: 1.05, rotate: 2 }}\n              className=\"group\"\n            >\n              <div className=\"relative aspect-square bg-card border-2 border-border hover:border-primary transition-all duration-300 rounded-3xl p-6 flex flex-col items-center justify-center cursor-pointer\">\n                <artist.icon className={`w-16 h-16 mb-4 ${artist.color} note-float`} />\n                <div className=\"retro-text text-xl text-foreground mb-2\">\n                  {artist.name}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  {artist.genre}\n                </div>\n                <div className=\"absolute top-2 right-2 w-3 h-3 bg-green-400 rounded-full animate-pulse\" />\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ delay: 0.5 }}\n          className=\"text-center\"\n        >\n          <a\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLSfxRvor4d6Z53P-3PQBWBzs5YHwicH9F0qzKenRSUBCAGgsVQ/viewform?usp=header\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-block px-8 py-4 bg-accent text-accent-foreground rounded-full retro-text text-lg hover:bg-primary hover:text-primary-foreground transition-all duration-300\"\n          >\n            [ SUBMIT YOUR DEMO ]\n          </a>\n        </motion.div>\n      </motion.div>\n    </section>\n  );\n}\n","size_bytes":3542},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/modern-contact.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ModernCard } from \"./modern-card\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertContactSchema, type InsertContact } from \"@shared/schema\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/components/ui/form\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport function ModernContact() {\n  const { toast } = useToast();\n  \n  const form = useForm<InsertContact>({\n    resolver: zodResolver(insertContactSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      interest: \"\",\n      message: \"\"\n    }\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: async (data: InsertContact) => {\n      const response = await apiRequest(\"POST\", \"/api/contact\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message sent!\",\n        description: \"Thank you for your message! We'll get back to you soon.\"\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Failed to send message\",\n        description: \"Please try again later.\",\n        variant: \"destructive\"\n      });\n      console.error(\"Contact form error:\", error);\n    }\n  });\n\n  const onSubmit = (data: InsertContact) => {\n    contactMutation.mutate(data);\n  };\n\n  return (\n    <section className=\"py-20 px-6 relative z-10\" id=\"contact\">\n      <div className=\"max-w-4xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-12\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">Get In Touch</h2>\n          <p className=\"text-gray-300 text-lg\">\n            Ready to discover unique music or collaborate with us? Let's connect.\n          </p>\n        </motion.div>\n\n        <ModernCard className=\"shadow-2xl shadow-black/30\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormControl>\n                        <input \n                          placeholder=\"Your Name\" \n                          className=\"w-full bg-white/5 border border-white/20 rounded-xl px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage className=\"text-red-400\" />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormControl>\n                        <input \n                          type=\"email\"\n                          placeholder=\"Your Email\" \n                          className=\"w-full bg-white/5 border border-white/20 rounded-xl px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n                          {...field} \n                        />\n                      </FormControl>\n                      <FormMessage className=\"text-red-400\" />\n                    </FormItem>\n                  )}\n                />\n              </div>\n              \n              <FormField\n                control={form.control}\n                name=\"interest\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormControl>\n                      <select \n                        className=\"w-full bg-white/5 border border-white/20 rounded-xl px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-pink-500\"\n                        {...field}\n                      >\n                        <option value=\"\">I'm interested in...</option>\n                        <option value=\"music-discovery\">Music Discovery</option>\n                        <option value=\"artist-development\">Artist Development</option>\n                        <option value=\"partnership\">Partnership Opportunities</option>\n                        <option value=\"general\">General Inquiry</option>\n                      </select>\n                    </FormControl>\n                    <FormMessage className=\"text-red-400\" />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"message\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormControl>\n                      <textarea \n                        placeholder=\"Your Message\" \n                        rows={6}\n                        className=\"w-full bg-white/5 border border-white/20 rounded-xl px-4 py-3 text-white placeholder-gray-400 resize-none focus:outline-none focus:ring-2 focus:ring-pink-500\"\n                        {...field} \n                      />\n                    </FormControl>\n                    <FormMessage className=\"text-red-400\" />\n                  </FormItem>\n                )}\n              />\n              \n              <button \n                type=\"submit\" \n                className=\"w-full bg-pink-500 hover:bg-pink-600 text-white py-3 rounded-full transition-colors font-medium\"\n                disabled={contactMutation.isPending}\n              >\n                {contactMutation.isPending ? \"Sending...\" : \"Send Message\"}\n              </button>\n            </form>\n          </Form>\n          \n          <div className=\"mt-8 pt-8 border-t border-white/20 text-center\">\n            <p className=\"text-gray-400\">Or reach us directly at:</p>\n            <a \n              href=\"mailto:matenations@gmail.com\" \n              className=\"text-pink-400 hover:text-pink-300 font-medium transition-colors\"\n            >\n              matenations@gmail.com\n            </a>\n          </div>\n        </ModernCard>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6420},"client/src/components/modern-about.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ModernCard } from \"./modern-card\";\nimport { Zap, Globe, Users, Music, Video, ListMusic } from \"lucide-react\";\n\nexport function ModernAbout() {\n  const features = [\n    {\n      icon: Music,\n      title: \"Mix & Mastering\",\n      description: \"Professional mixing and mastering services for pristine sound quality\"\n    },\n    {\n      icon: Zap,\n      title: \"Distribution in 48 hrs\",\n      description: \"Fast-track distribution to all major streaming platforms within 48 hours\"\n    },\n    {\n      icon: Users,\n      title: \"Promotion with 30+ Promoters\",\n      description: \"Partnership with over 30 reputed promoters for maximum reach\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 px-6 relative z-10\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">About Mate Nation</h2>\n          <p className=\"text-gray-300 text-lg max-w-3xl mx-auto mb-6\">\n            Our key features for artists\n          </p>\n          \n          {/* Label info visible only on tablet and desktop */}\n          <p className=\"hidden md:block text-gray-400 text-base max-w-4xl mx-auto leading-relaxed\">\n            Mate Nations is a forward-thinking record label dedicated to empowering artists across all genres. We provide comprehensive support from production to promotion, combining cutting-edge technology with industry expertise to help musicians reach their full potential. Our commitment to artistic freedom and transparent partnerships sets us apart in the music industry.\n          </p>\n        </motion.div>\n\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          {features.map((feature, index) => (\n            <ModernCard key={index} delay={index * 0.1} gradient=\"bg-gradient-to-br from-pink-600/30 to-purple-800/20\">\n              <div className=\"text-center\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-pink-500/30 rounded-2xl mb-4 border border-pink-400/30\">\n                  <feature.icon className=\"w-8 h-8 text-pink-300\" />\n                </div>\n                <h3 className=\"text-xl font-medium text-white mb-3\">{feature.title}</h3>\n                <p className=\"text-gray-300 text-sm\">{feature.description}</p>\n              </div>\n            </ModernCard>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2583},"client/src/contexts/theme-context.tsx":{"content":"import { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Theme = 'day' | 'night';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('night');\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'night' ? 'day' : 'night');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n}\n","size_bytes":1086},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/sticky-header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport function StickyHeader() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const heroHeight = window.innerHeight;\n      setIsVisible(window.scrollY > heroHeight * 0.8);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll();\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.header\n          initial={{ y: -100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          exit={{ y: -100, opacity: 0 }}\n          transition={{ duration: 0.3, ease: \"easeOut\" }}\n          className=\"fixed top-0 left-0 right-0 z-50 backdrop-blur-lg bg-black/30 border-b border-white/10\"\n        >\n          <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <span className=\"text-2xl md:text-3xl font-bold\" style={{ letterSpacing: '-0.05em' }}>\n                mate.\n              </span>\n            </div>\n            <motion.button\n              data-testid=\"button-submit-demo\"\n              onClick={(e) => {\n                e.preventDefault();\n                document.querySelector('#contact')?.scrollIntoView({ behavior: 'smooth' });\n              }}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              className=\"px-6 py-2.5 bg-white text-black font-semibold rounded-full hover:bg-gray-100 transition-colors\"\n            >\n              Submit Demo\n            </motion.button>\n          </div>\n        </motion.header>\n      )}\n    </AnimatePresence>\n  );\n}\n","size_bytes":1801},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/animated-background.tsx":{"content":"import { motion } from \"framer-motion\";\n\ninterface AnimatedBackgroundProps {\n  children: React.ReactNode;\n  intensity?: \"low\" | \"medium\" | \"high\";\n  className?: string;\n}\n\nexport function AnimatedBackground({ \n  children, \n  intensity = \"medium\",\n  className = \"\" \n}: AnimatedBackgroundProps) {\n  const intensityConfig = {\n    low: { opacity: 0.3, blur: 100, duration: 20 },\n    medium: { opacity: 0.4, blur: 120, duration: 18 },\n    high: { opacity: 0.5, blur: 140, duration: 16 }\n  };\n\n  const config = intensityConfig[intensity];\n\n  return (\n    <div className={`relative ${className}`}>\n      <div className=\"absolute inset-0 overflow-hidden\">\n        {/* Pink wave blob */}\n        <motion.div\n          className=\"absolute w-[150%] h-[150%] -left-[25%] -top-[25%]\"\n          style={{\n            filter: `blur(${config.blur}px)`,\n            background: `\n              radial-gradient(circle 800px at 25% 35%, rgba(236, 72, 153, ${config.opacity}) 0%, transparent 65%)\n            `\n          }}\n          animate={{\n            x: [\"0%\", \"8%\", \"-5%\", \"10%\", \"-3%\", \"0%\"],\n            y: [\"0%\", \"-8%\", \"6%\", \"-7%\", \"5%\", \"0%\"],\n            rotate: [0, 15, -10, 20, -15, 0]\n          }}\n          transition={{\n            duration: config.duration,\n            ease: [0.42, 0, 0.58, 1],\n            repeat: Infinity,\n            repeatType: \"mirror\"\n          }}\n        />\n\n        {/* Light blue wave blob */}\n        <motion.div\n          className=\"absolute w-[150%] h-[150%] -left-[25%] -top-[25%]\"\n          style={{\n            filter: `blur(${config.blur}px)`,\n            background: `\n              radial-gradient(circle 700px at 75% 40%, rgba(147, 197, 253, ${config.opacity}) 0%, transparent 65%)\n            `\n          }}\n          animate={{\n            x: [\"0%\", \"-7%\", \"6%\", \"-8%\", \"4%\", \"0%\"],\n            y: [\"0%\", \"7%\", \"-6%\", \"8%\", \"-5%\", \"0%\"],\n            rotate: [0, -12, 18, -15, 10, 0]\n          }}\n          transition={{\n            duration: config.duration + 2,\n            ease: [0.42, 0, 0.58, 1],\n            repeat: Infinity,\n            repeatType: \"mirror\"\n          }}\n        />\n\n        {/* Secondary pink blob for depth */}\n        <motion.div\n          className=\"absolute w-[150%] h-[150%] -left-[25%] -top-[25%]\"\n          style={{\n            filter: `blur(${config.blur * 0.9}px)`,\n            background: `\n              radial-gradient(circle 650px at 50% 70%, rgba(244, 114, 182, ${config.opacity * 0.7}) 0%, transparent 65%)\n            `\n          }}\n          animate={{\n            x: [\"0%\", \"6%\", \"-7%\", \"5%\", \"-6%\", \"0%\"],\n            y: [\"0%\", \"-5%\", \"8%\", \"-6%\", \"7%\", \"0%\"],\n            rotate: [0, 20, -15, 25, -10, 0],\n            scale: [1, 1.08, 0.92, 1.05, 0.96, 1]\n          }}\n          transition={{\n            duration: config.duration + 4,\n            ease: [0.42, 0, 0.58, 1],\n            repeat: Infinity,\n            repeatType: \"mirror\"\n          }}\n        />\n\n        {/* Secondary light blue blob for depth */}\n        <motion.div\n          className=\"absolute w-[150%] h-[150%] -left-[25%] -top-[25%]\"\n          style={{\n            filter: `blur(${config.blur * 0.85}px)`,\n            background: `\n              radial-gradient(circle 600px at 80% 75%, rgba(125, 211, 252, ${config.opacity * 0.6}) 0%, transparent 65%)\n            `\n          }}\n          animate={{\n            x: [\"0%\", \"-8%\", \"9%\", \"-7%\", \"8%\", \"0%\"],\n            y: [\"0%\", \"9%\", \"-7%\", \"10%\", \"-8%\", \"0%\"],\n            rotate: [0, -18, 22, -20, 15, 0],\n            scale: [1, 0.94, 1.06, 0.97, 1.04, 1]\n          }}\n          transition={{\n            duration: config.duration + 6,\n            ease: [0.42, 0, 0.58, 1],\n            repeat: Infinity,\n            repeatType: \"mirror\"\n          }}\n        />\n\n        {/* Accent pink highlight */}\n        <motion.div\n          className=\"absolute w-[150%] h-[150%] -left-[25%] -top-[25%]\"\n          style={{\n            filter: `blur(${config.blur * 1.1}px)`,\n            background: `\n              radial-gradient(circle 500px at 40% 50%, rgba(249, 168, 212, ${config.opacity * 0.5}) 0%, transparent 65%)\n            `\n          }}\n          animate={{\n            x: [\"0%\", \"10%\", \"-9%\", \"8%\", \"-10%\", \"0%\"],\n            y: [\"0%\", \"-10%\", \"9%\", \"-8%\", \"10%\", \"0%\"],\n            scale: [1, 1.12, 0.88, 1.08, 0.92, 1]\n          }}\n          transition={{\n            duration: config.duration + 8,\n            ease: [0.42, 0, 0.58, 1],\n            repeat: Infinity,\n            repeatType: \"mirror\"\n          }}\n        />\n      </div>\n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </div>\n  );\n}\n","size_bytes":4632},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"replit.md":{"content":"# Overview\n\nMate Nation is a music society web application focused on discovering and promoting unique music across all genres. The platform serves as both a music discovery service and an artist development platform, connecting music lovers with emerging artists while providing promotional services including music videos, curated playlists, and custom lyrics.\n\n## Recent Changes (October 2025)\n\n### Visual & UX Enhancements (October 13, 2025)\nImplemented 12 key improvements based on user requirements:\n- **Shadow Removal**: Removed bubble-glow shadow effects from Artist Showcase section for cleaner visual design\n- **About Section Background**: Removed dark shadow background from About Mate Nation section by replacing MinimalistBackground with transparent wrapper\n- **Enhanced Record Label Content**: Added two comprehensive paragraphs in About Mate Nation section describing the label's foundation, technology, team expertise, facilities, and artist support services\n- **Crew Cards Visibility**: Fixed card stack to show corners of next cards on initial load with improved offset positioning (15px x-offset, 3° rotation, 3% scale reduction)\n- **Smooth Card Animations**: Enhanced swipe animations with improved spring physics (stiffness: 300, damping: 25) and removed overflow clipping for seamless transitions\n- **Unified Swipe Direction**: Both left and right swipe now move crew cards forward in the same direction for consistent navigation\n- **Enhanced Swipe Instructions**: Made \"Swipe to see all members\" text bold with arrows on both sides (→ Swipe to see all members →)\n- **Unified Cloud Design**: Hero section now uses the same cloud image for both light and dark themes for consistent branding\n- **Floating Cloud Animation**: Added slow floating animations to clouds (8-10 second duration) for gentle, calming movement\n- **Star Theme Control**: Yellow star glows now only appear in night theme and are hidden in day theme for better visual consistency\n- **For Artists Section**: Removed dark shadow background for cleaner appearance\n\n### UI/UX Updates (October 12, 2025)\nImplemented 5 key improvements to the website based on user feedback:\n- **Hero Cursor**: Changed typing cursor from | character to thin square bar (1px wide, responsive height)\n- **For Artists Section**: Renamed from \"Be Our Part\" to \"For Artists\", removed illustration, centered card layout\n- **About Section Redesign**: Streamlined to 3 key artist features - Mix & Mastering, 48hr Distribution, Promotion with 30+ Promoters\n- **Crew Cards Fix**: Fixed card stack visibility and glitch issues with remount-based animation resets for smooth transitions\n- **Footer Updates**: Updated email to info@matenation.org and improved responsive layout for all screen sizes\n\n### Replit Environment Setup (October 12, 2025)\nSuccessfully configured the project to run in the Replit environment:\n- **Dependencies**: Installed all npm dependencies (482 packages)\n- **Vite Configuration**: Added port 5000, strictPort, and allowedHosts for Replit proxy compatibility\n- **Workflow**: Configured `npm run dev` workflow to run on port 5000 with webview output\n- **Build Path**: Fixed production static file serving path from `public` to `client/dist`\n- **Deployment**: Configured autoscale deployment with build and start scripts\n- **Gitignore**: Created .gitignore for Node.js project with standard exclusions\n- **Server Status**: Development server successfully running on port 5000 with HMR enabled\n\n### Scroll Behavior Enhancement (October 12, 2025)\nImplemented CSS scroll-snap for smooth section transitions:\n- **Scroll Behavior**: Natural scrolling with snap-to-section effect using CSS scroll-snap\n- **Section Layout**: Each section takes full viewport height with smooth transitions\n- **Footer Positioning**: Footer is sticky at the bottom of the final section\n- **User Experience**: Seamless scrolling through sections with visual snap points\n\n### Retro Illustration System (October 12, 2025)\nAdded comprehensive retro/vintage illustration components throughout the site:\n- **Retro Components**: Created reusable SVG components including vinyl records, cassettes, speakers, computers, planets, isometric rooms, and retro grids\n- **Animations**: Subtle Framer Motion animations (rotation, floating, scaling) for visual interest\n- **Integration**: Retro illustrations added to hero, about, and genres sections as decorative background elements\n- **Visual Hierarchy**: Illustrations positioned with low opacity to enhance aesthetic without overwhelming content\n- **Performance**: Lightweight SVG-based components with minimal animation overhead\n\n### Complete Design Redesign\nThe site has been completely redesigned with a modern aesthetic inspired by contemporary web design:\n- **Visual Style**: Dark gradient background (#1a1d3d to #0a0b1a) with subtle grid pattern overlay\n- **Design Elements**: Retro illustrations with glassmorphism cards and enhanced backdrop-blur-xl effects\n- **Color Scheme**: Pink accent colors (#ec4899) for CTAs and highlights, with colorful genre badges\n- **Typography**: Clean, modern font hierarchy with light font weights\n- **Layout**: Card-based sections with rounded-3xl corners and shadow-xl effects\n- **Removed**: Boot screen for instant loading experience\n- **Theme Toggle**: Repositioned to top-right corner with glassmorphism styling\n\n### Preserved Features\nAll original Mate Nation content and features have been maintained:\n- **Genres Showcase**: 9 music genres (Electronic, Hip Hop, Rock, Pop, EDM, Experimental, Jazz, Future Bass, Classic) with colorful icons\n- Complete team directory (leadership and members)\n- Partner integration (Unison Music App)\n- Brand ambassadors section\n- Contact form with email integration\n- Music Hunt interactive game\n- Theme toggle (day/night modes)\n- Full navigation system with smooth scrolling\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React with TypeScript using Vite as the build tool\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n- **Animations**: Framer Motion for smooth animations and transitions\n- **UI Components**: Comprehensive component library using Radix UI primitives\n\nThe frontend follows a component-based architecture with clearly separated concerns:\n- Page components handle route-level logic\n- UI components provide reusable interface elements\n- Custom hooks manage shared logic and state\n- Utility functions handle common operations\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript for type safety\n- **API Design**: RESTful API with structured error handling\n- **Development**: Hot module replacement with Vite integration\n- **Storage**: In-memory storage implementation with interface for future database integration\n\nThe backend uses a modular approach with:\n- Route handlers for API endpoints\n- Storage abstraction layer for data persistence\n- Middleware for request logging and error handling\n- Shared schema validation between frontend and backend\n\n## Data Storage Solutions\n- **Current**: In-memory storage using Map data structures\n- **Planned**: PostgreSQL with Drizzle ORM for production\n- **Schema**: Shared TypeScript schemas using Drizzle and Zod for validation\n- **Tables**: Users and contact submissions with UUID primary keys\n\nThe storage layer uses an interface-based design allowing easy migration from in-memory to database storage without changing application logic.\n\n## Authentication and Authorization\n- **Current**: Basic user storage structure in place\n- **Implementation**: Username/password based authentication ready for implementation\n- **Session Management**: Cookie-based sessions with connect-pg-simple for PostgreSQL session store\n\n## External Dependencies\n- **Database**: Neon Database (PostgreSQL) for production data storage\n- **UI Framework**: shadcn/ui built on Radix UI primitives\n- **Validation**: Zod for runtime type checking and schema validation\n- **ORM**: Drizzle with PostgreSQL dialect for type-safe database operations\n- **Development Tools**: Replit-specific plugins for development environment integration\n- **Styling**: Google Fonts integration for typography (Inter, DM Sans, Fira Code, Geist Mono, Architects Daughter)\n\nThe application integrates with external services for enhanced functionality:\n- Social media links for artist promotion (Instagram integration shown)\n- Partnership integration with Unison Music App for collaboration features\n- Font delivery through Google Fonts CDN for consistent typography","size_bytes":8848},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"server/storage.ts":{"content":"import { type User, type InsertUser, type ContactSubmission, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContactSubmission(contact: InsertContact): Promise<ContactSubmission>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contactSubmissions: Map<string, ContactSubmission>;\n\n  constructor() {\n    this.users = new Map();\n    this.contactSubmissions = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContactSubmission(insertContact: InsertContact): Promise<ContactSubmission> {\n    const id = randomUUID();\n    const submission: ContactSubmission = { \n      ...insertContact, \n      id,\n      createdAt: new Date()\n    };\n    this.contactSubmissions.set(id, submission);\n    return submission;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1532},"client/src/components/sliding-sections.tsx":{"content":"import { ReactNode } from 'react';\n\ninterface SlidingSectionsProps {\n  children: ReactNode[];\n}\n\nexport function SlidingSections({ children }: SlidingSectionsProps) {\n  return (\n    <div className=\"h-screen overflow-y-scroll snap-y snap-mandatory scroll-smooth\">\n      {children.map((child, index) => (\n        <section \n          key={index} \n          className=\"min-h-screen snap-start snap-always flex flex-col\"\n        >\n          {child}\n        </section>\n      ))}\n    </div>\n  );\n}\n","size_bytes":491},"client/src/components/modern-genres.tsx":{"content":"import { motion } from \"framer-motion\";\n\nexport function ModernGenres() {\n  return (\n    <section className=\"py-20 px-6 relative z-10\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-light text-white mb-6\">For Artists</h2>\n        </motion.div>\n\n        <div className=\"flex justify-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"w-full max-w-4xl\"\n          >\n            <div className=\"bg-gray-500/20 backdrop-blur-xl rounded-3xl p-8 md:p-12 border border-gray-400/20 shadow-2xl\">\n              <h3 className=\"text-3xl md:text-4xl font-light text-white mb-6 text-center\">\n                Join Our Musical Family\n              </h3>\n              <p className=\"text-gray-200 text-lg mb-6 leading-relaxed text-center\">\n                Are you an artist ready to share your sound with the world? We're here to amplify your voice.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                {[\n                  { title: \"All Genres Welcome\", desc: \"From Hip Hop to Jazz, Electronic to Rock, we celebrate every sound\" },\n                  { title: \"Fast Response\", desc: \"We listen to all demos within one week\" },\n                  { title: \"Global Platform\", desc: \"Get your music heard worldwide\" }\n                ].map((item, index) => (\n                  <motion.div \n                    key={index}\n                    initial={{ opacity: 0, x: -20 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    viewport={{ once: true }}\n                    transition={{ \n                      delay: index * 0.1, \n                      duration: 0.5,\n                      ease: [0.22, 1, 0.36, 1]\n                    }}\n                    className=\"flex items-start gap-3\"\n                  >\n                    <div className=\"w-2 h-2 rounded-full bg-pink-500 mt-2\"></div>\n                    <p className=\"text-gray-200\">\n                      <span className=\"font-medium text-white\">{item.title}</span> - {item.desc}\n                    </p>\n                  </motion.div>\n                ))}\n              </div>\n              <motion.div \n                className=\"text-center\"\n                initial={{ opacity: 0, scale: 0.9 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.4, duration: 0.5 }}\n              >\n                <motion.a\n                  href=\"https://docs.google.com/forms/d/e/1FAIpQLSfxRvor4d6Z53P-3PQBWBzs5YHwicH9F0qzKenRSUBCAGgsVQ/viewform?usp=header\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  whileHover={{ scale: 1.05, y: -2 }}\n                  whileTap={{ scale: 0.95 }}\n                  className=\"inline-block px-8 py-4 bg-pink-500 hover:bg-pink-600 text-white rounded-full font-medium transition-all shadow-2xl hover:shadow-pink-500/50\"\n                >\n                  Submit Your Demo\n                </motion.a>\n              </motion.div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3488},"client/src/components/typing-effect.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nexport function TypingEffect() {\n  const text = 'mate.';\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n  const [showCursor, setShowCursor] = useState(true);\n  const [blinkCount, setBlinkCount] = useState(0);\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n\n    if (isTyping && displayText.length < text.length) {\n      timeout = setTimeout(() => {\n        setDisplayText(text.slice(0, displayText.length + 1));\n      }, 150);\n    } else if (isTyping && displayText.length === text.length) {\n      setIsTyping(false);\n      setBlinkCount(0);\n    } else if (!isTyping && blinkCount < 7) {\n      timeout = setTimeout(() => {\n        setShowCursor(!showCursor);\n        if (!showCursor) {\n          setBlinkCount(blinkCount + 1);\n        }\n      }, 500);\n    } else if (!isTyping && blinkCount >= 7) {\n      timeout = setTimeout(() => {\n        if (displayText.length > 0) {\n          setDisplayText(displayText.slice(0, -1));\n        } else {\n          setIsTyping(true);\n          setShowCursor(true);\n        }\n      }, 100);\n    }\n\n    return () => clearTimeout(timeout);\n  }, [displayText, isTyping, showCursor, blinkCount, text]);\n\n  return (\n    <div className=\"relative inline-block\">\n      <h1 className=\"text-6xl md:text-8xl lg:text-9xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-400 via-purple-400 to-blue-400\" style={{ fontFamily: \"'Quicksand', 'Rounded', sans-serif\", letterSpacing: '-0.02em' }}>\n        {displayText}\n        <motion.span\n          initial={{ opacity: 0 }}\n          animate={{ opacity: showCursor ? 1 : 0 }}\n          className=\"inline-block w-1 h-16 md:h-20 lg:h-24 bg-pink-400 ml-1\"\n          style={{ fontFamily: \"'Quicksand', 'Rounded', sans-serif\" }}\n        >\n        </motion.span>\n      </h1>\n    </div>\n  );\n}\n","size_bytes":1938},"client/src/components/retro-illustrations.tsx":{"content":"import { motion } from \"framer-motion\";\n\nexport function IsometricCube({ className = \"\", delay = 0, color = \"from-purple-500 to-pink-500\" }: { className?: string; delay?: number; color?: string }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20, rotateX: 0 }}\n      animate={{ opacity: 1, y: 0, rotateX: 360 }}\n      transition={{ \n        delay, \n        duration: 20,\n        repeat: Infinity,\n        ease: \"linear\"\n      }}\n      className={`${className} perspective-1000`}\n    >\n      <div className=\"relative w-24 h-24\" style={{ transform: 'rotateX(45deg) rotateZ(45deg)' }}>\n        <div className={`absolute inset-0 bg-gradient-to-br ${color} opacity-80 rounded-lg shadow-2xl`}></div>\n      </div>\n    </motion.div>\n  );\n}\n\nexport function RetroVinyl({ className = \"\", delay = 0 }: { className?: string; delay?: number }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, rotate: 0 }}\n      animate={{ opacity: 1, rotate: 360 }}\n      transition={{ \n        delay,\n        duration: 8,\n        repeat: Infinity,\n        ease: \"linear\"\n      }}\n      className={className}\n    >\n      <svg viewBox=\"0 0 100 100\" className=\"w-full h-full\">\n        <defs>\n          <radialGradient id=\"vinylGradient\">\n            <stop offset=\"0%\" stopColor=\"#1a1a1a\" />\n            <stop offset=\"40%\" stopColor=\"#2a2a2a\" />\n            <stop offset=\"100%\" stopColor=\"#0a0a0a\" />\n          </radialGradient>\n        </defs>\n        <circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"url(#vinylGradient)\" stroke=\"#444\" strokeWidth=\"1\"/>\n        <circle cx=\"50\" cy=\"50\" r=\"8\" fill=\"#ec4899\" />\n        <circle cx=\"50\" cy=\"50\" r=\"35\" fill=\"none\" stroke=\"#333\" strokeWidth=\"0.5\"/>\n        <circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"none\" stroke=\"#333\" strokeWidth=\"0.5\"/>\n        <circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"none\" stroke=\"#333\" strokeWidth=\"0.5\"/>\n        <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"#333\" strokeWidth=\"0.5\"/>\n      </svg>\n    </motion.div>\n  );\n}\n\nexport function RetroCassette({ className = \"\", delay = 0 }: { className?: string; delay?: number }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: [0.6, 1, 0.6], y: [0, -10, 0] }}\n      transition={{ \n        delay,\n        duration: 3,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n      className={className}\n    >\n      <svg viewBox=\"0 0 120 80\" className=\"w-full h-full\">\n        <rect x=\"5\" y=\"10\" width=\"110\" height=\"60\" rx=\"4\" fill=\"#1a1d3d\" stroke=\"#ec4899\" strokeWidth=\"2\"/>\n        <rect x=\"15\" y=\"20\" width=\"90\" height=\"40\" rx=\"2\" fill=\"#0a0b1a\"/>\n        <circle cx=\"35\" cy=\"40\" r=\"12\" fill=\"none\" stroke=\"#666\" strokeWidth=\"2\"/>\n        <circle cx=\"85\" cy=\"40\" r=\"12\" fill=\"none\" stroke=\"#666\" strokeWidth=\"2\"/>\n        <rect x=\"47\" y=\"35\" width=\"26\" height=\"10\" fill=\"#ec4899\"/>\n        <line x1=\"35\" y1=\"28\" x2=\"85\" y2=\"28\" stroke=\"#ec4899\" strokeWidth=\"1.5\"/>\n        <line x1=\"35\" y1=\"52\" x2=\"85\" y2=\"52\" stroke=\"#ec4899\" strokeWidth=\"1.5\"/>\n      </svg>\n    </motion.div>\n  );\n}\n\nexport function RetroSpeaker({ className = \"\", delay = 0 }: { className?: string; delay?: number }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.8 }}\n      animate={{ opacity: 1, scale: [0.95, 1.05, 0.95] }}\n      transition={{ \n        delay,\n        duration: 2,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n      className={className}\n    >\n      <svg viewBox=\"0 0 80 100\" className=\"w-full h-full\">\n        <rect x=\"10\" y=\"5\" width=\"60\" height=\"90\" rx=\"6\" fill=\"#1a1d3d\" stroke=\"#666\" strokeWidth=\"2\"/>\n        <circle cx=\"40\" cy=\"30\" r=\"12\" fill=\"#0a0b1a\" stroke=\"#ec4899\" strokeWidth=\"2\"/>\n        <circle cx=\"40\" cy=\"30\" r=\"8\" fill=\"none\" stroke=\"#ec4899\" strokeWidth=\"1\"/>\n        <circle cx=\"40\" cy=\"70\" r=\"18\" fill=\"#0a0b1a\" stroke=\"#a78bfa\" strokeWidth=\"2\"/>\n        <circle cx=\"40\" cy=\"70\" r=\"14\" fill=\"none\" stroke=\"#a78bfa\" strokeWidth=\"1\"/>\n        <circle cx=\"40\" cy=\"70\" r=\"10\" fill=\"none\" stroke=\"#a78bfa\" strokeWidth=\"1\"/>\n      </svg>\n    </motion.div>\n  );\n}\n\nexport function RetroComputer({ className = \"\", delay = 0 }: { className?: string; delay?: number }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ delay }}\n      className={className}\n    >\n      <svg viewBox=\"0 0 120 100\" className=\"w-full h-full\">\n        <rect x=\"15\" y=\"10\" width=\"90\" height=\"60\" rx=\"4\" fill=\"#1a1d3d\" stroke=\"#666\" strokeWidth=\"2\"/>\n        <rect x=\"20\" y=\"15\" width=\"80\" height=\"50\" fill=\"#0a0b1a\"/>\n        <motion.rect \n          x=\"25\" y=\"20\" width=\"70\" height=\"40\" fill=\"#ec4899\" opacity=\"0.3\"\n          animate={{ opacity: [0.2, 0.4, 0.2] }}\n          transition={{ duration: 2, repeat: Infinity }}\n        />\n        <rect x=\"45\" y=\"70\" width=\"30\" height=\"5\" fill=\"#666\"/>\n        <rect x=\"30\" y=\"75\" width=\"60\" height=\"3\" rx=\"1\" fill=\"#444\"/>\n        <circle cx=\"60\" cy=\"85\" r=\"2\" fill=\"#ec4899\"/>\n      </svg>\n    </motion.div>\n  );\n}\n\nexport function RetroPlanet({ className = \"\", delay = 0, color = \"#a78bfa\" }: { className?: string; delay?: number; color?: string }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0 }}\n      animate={{ \n        opacity: [0.6, 1, 0.6], \n        scale: [0.95, 1, 0.95],\n        rotate: 360 \n      }}\n      transition={{ \n        delay,\n        duration: 15,\n        repeat: Infinity,\n        ease: \"linear\"\n      }}\n      className={className}\n    >\n      <svg viewBox=\"0 0 100 100\" className=\"w-full h-full\">\n        <defs>\n          <radialGradient id={`planetGradient${delay}`}>\n            <stop offset=\"0%\" stopColor={color} stopOpacity=\"0.8\"/>\n            <stop offset=\"100%\" stopColor={color} stopOpacity=\"0.3\"/>\n          </radialGradient>\n        </defs>\n        <circle cx=\"50\" cy=\"50\" r=\"35\" fill={`url(#planetGradient${delay})`}/>\n        <ellipse cx=\"50\" cy=\"50\" rx=\"50\" ry=\"8\" fill=\"none\" stroke={color} strokeWidth=\"2\" opacity=\"0.6\"/>\n      </svg>\n    </motion.div>\n  );\n}\n\nexport function RetroGrid({ className = \"\" }: { className?: string }) {\n  return (\n    <div className={`absolute inset-0 ${className}`}>\n      <svg className=\"w-full h-full opacity-20\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n            <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#ec4899\" strokeWidth=\"0.5\"/>\n          </pattern>\n        </defs>\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n      </svg>\n    </div>\n  );\n}\n\nexport function IsometricRoom({ className = \"\", delay = 0 }: { className?: string; delay?: number }) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 30 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay, duration: 0.8 }}\n      className={className}\n    >\n      <svg viewBox=\"0 0 200 200\" className=\"w-full h-full\">\n        {/* Floor */}\n        <polygon points=\"100,140 40,100 100,60 160,100\" fill=\"#1a1d3d\" stroke=\"#666\" strokeWidth=\"2\"/>\n        {/* Left Wall */}\n        <polygon points=\"40,100 40,40 100,20 100,60\" fill=\"#252850\" stroke=\"#666\" strokeWidth=\"2\"/>\n        {/* Right Wall */}\n        <polygon points=\"100,20 160,40 160,100 100,60\" fill=\"#2a2d5a\" stroke=\"#666\" strokeWidth=\"2\"/>\n        {/* Window on left wall */}\n        <rect x=\"50\" y=\"45\" width=\"30\" height=\"25\" fill=\"#ec4899\" opacity=\"0.6\"/>\n        {/* Furniture - desk */}\n        <polygon points=\"80,100 90,95 140,95 130,100\" fill=\"#ec4899\"/>\n        {/* Monitor */}\n        <rect x=\"95\" y=\"75\" width=\"30\" height=\"20\" fill=\"#a78bfa\"/>\n      </svg>\n    </motion.div>\n  );\n}\n","size_bytes":7601}},"version":2}